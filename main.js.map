{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/magentaResources.ts","webpack:///./src/cyanResources.ts","webpack:///./src/particles/index.ts","webpack:///./src/resources.ts","webpack:///./src/index.ts","webpack:///./src/actors/player/player.ts","webpack:///./src/actors/sobaka/sobaka.ts","webpack:///./src/scenes/level.ts","webpack:///./src/actors/finish/finish.ts","webpack:///./src/actors/wall/wall.ts","webpack:///./src/actors/door/door.ts","webpack:///./src/scenes/createbg.ts","webpack:///./src/createButtonDoors.ts","webpack:///./src/actors/button/button.ts","webpack:///./src/actors/wall/wallTile.ts","webpack:///./src/scenes/winScreen.ts","webpack:///./src/actors/deathNote.ts","webpack:///./src/actors/timer.ts","webpack:///./src/scenes/menu.ts","webpack:///./src/scenes/level3.ts","webpack:///./src/scenes/level2.ts","webpack:///./src/particles/death.ts","webpack:///./src/particles/player_2.ts","webpack:///./src/particles/player_1.ts","webpack:///./src/particles/background.ts","webpack:///./src/particles/portal.ts","webpack:///./src/images-retrowave/cyan/dog_right.png","webpack:///./src/images-retrowave/cyan/dog_left.png","webpack:///./src/images-retrowave/cyan/door1_2_opened.png","webpack:///./src/images-retrowave/cyan/door2.png","webpack:///./src/images-retrowave/cyan/door_3_4_opened.png","webpack:///./src/images-retrowave/cyan/door_3.png","webpack:///./src/images-retrowave/cyan/button_pressed.png","webpack:///./src/images-retrowave/cyan/button.png","webpack:///./src/images-retrowave/cyan/wall16.png","webpack:///./src/images-retrowave/cyan/wall15.png","webpack:///./src/images-retrowave/cyan/wall14.png","webpack:///./src/images-retrowave/cyan/wall13.png","webpack:///./src/images-retrowave/cyan/wall12.png","webpack:///./src/images-retrowave/cyan/wall11.png","webpack:///./src/images-retrowave/cyan/wall10.png","webpack:///./src/images-retrowave/cyan/wall8.png","webpack:///./src/images-retrowave/cyan/wall7.png","webpack:///./src/images-retrowave/cyan/wall6.png","webpack:///./src/images-retrowave/cyan/wall5.png","webpack:///./src/images-retrowave/cyan/wall4.png","webpack:///./src/images-retrowave/cyan/wall3.png","webpack:///./src/images-retrowave/cyan/wall2.png","webpack:///./src/images-retrowave/cyan/wall1.png","webpack:///./src/images-retrowave/cyan/cop_1_right.png","webpack:///./src/images-retrowave/cyan/cop_1_left.png","webpack:///./src/images-retrowave/magenta/dog_right.png","webpack:///./src/images-retrowave/magenta/dog_left.png","webpack:///./src/images-retrowave/magenta/door1_2_opened.png","webpack:///./src/images-retrowave/magenta/door2.png","webpack:///./src/images-retrowave/magenta/door_3_4_opened.png","webpack:///./src/images-retrowave/magenta/door_3.png","webpack:///./src/images-retrowave/magenta/button_pressed.png","webpack:///./src/images-retrowave/magenta/button.png","webpack:///./src/images-retrowave/magenta/wall16.png","webpack:///./src/images-retrowave/magenta/wall15.png","webpack:///./src/images-retrowave/magenta/wall14.png","webpack:///./src/images-retrowave/magenta/wall13.png","webpack:///./src/images-retrowave/magenta/wall12.png","webpack:///./src/images-retrowave/magenta/wall11.png","webpack:///./src/images-retrowave/magenta/wall10.png","webpack:///./src/images-retrowave/magenta/wall8.png","webpack:///./src/images-retrowave/magenta/wall7.png","webpack:///./src/images-retrowave/magenta/wall6.png","webpack:///./src/images-retrowave/magenta/wall5.png","webpack:///./src/images-retrowave/magenta/wall4.png","webpack:///./src/images-retrowave/magenta/wall3.png","webpack:///./src/images-retrowave/magenta/wall2.png","webpack:///./src/images-retrowave/magenta/wall1.png","webpack:///./src/images-retrowave/magenta/cop_1_right.png","webpack:///./src/images-retrowave/magenta/cop_1_left.png","webpack:///./src/images-retrowave/bg.jpg","webpack:///./src/images32/Controls.png","webpack:///./src/images32/environment_03.png","webpack:///./src/images32/block_06.png","webpack:///./src/images32/empty.png","webpack:///./src/images32/player_05.png","webpack:///./src/images32/sword.png","webpack:///./src/scenes/level1.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","default","object","property","p","jsonpArray","window","webpackJsonp","oldJsonpFunction","bind","slice","ex","copLeft","copRight","leftTop","leftBottom","rightTop","rightBottom","endLeft","endDown","endRight","endTop","topDown","leftRight","cross","tTop","tDown","tRight","tLeft","btn","btnPressed","dhc","dho","dvc","dvo","dogLeft","dogRight","MagentaResources","Texture","doorHorizontalClosed","doorHorizontalOpen","doorVerticalClosed","doorVerticalOpen","CyanResources","portal_1","portal","background_1","background","player_1_1","player1particle","player_2_1","player2particle","death_1","death","sword","empty","door","finish","controls","bg","Resources","Sword","Empty","Door","Finish","Bg","Controls","level1_1","level2_1","level3_1","player_1","resources_1","Input_1","menu_1","magentaResources_1","cyanResources_1","timer_1","deathNote_1","winScreen_1","sobaka_1","globalEvents","EventDispatcher","Game","_super","_this","this","width","height","displayMode","DisplayMode","FullScreen","backgroundColor","Color","fromRGB","canvasElementId","controlsActive","finishControls","t","__extends","start","loader","Engine","game","Loader","timer","ScoreTime","deathNote","DeathNote","playerA","Player","playerB","menu","Menu","levels","LevelOne","LevelTwo","LevelThree","WinScreen","leveli","level","aActive","addScene","forEach","input","pointers","primary","on","asd","console","log","off","setTime","goToScene","onPressEvent","event","key","Keys","Space","switchType","_a","x","y","G","emit","DeathEvent","T","keyboard","move","addResource","_","onActivate","toggle","showDeathParticle","isA","checkAndSend","isHeld","setTimeout","Input","KeyEvent","W","A","S","D","then","e","setPrototypeOf","__proto__","Array","constructor","create","wallTile_1","door_1","particles_1","TILE","tx","ty","asSprite","collidable","WallTile","flag","setDrawing","cancelMove","prev","setPos","startpos","startposy","moving","setZIndex","setWidth","setHeight","color","collisionType","CollisionType","Passive","addDrawing","add","ev","some","collidableObject","other","opened","Actor","__1","level_1","button_1","GameEvent","Sobaka","steps","direction","to","Vector","hidden","deltax","guljatj","speed","actions","callMethod","moveTo","delay","repeatForever","delta","__assign","next","asPromise","Button","ChangeTypeEvent","createbg_1","Level","objectsA","objectsB","engine","setPlayers","xa","ya","xb","yb","clear","objectA","remove","objectB","showLevelNumber","num","levelShown","label","Label","getWorldBounds","right","top","opacity","fontFamily","fontSize","Yellow","textAlign","TextAlign","Center","fade","createBg","onInitialize","onDeactivate","beginColor","fromHex","endColor","isEmitting","Scene","index_1","col","collides","Math","abs","createWall","w","h","texture","tiles","ix","iy","wallTile","createWalls","wallsConfig","walls","row","tile","createBorders","sidex","sidey","leftWall","topWall","rightWall","bottomWall","altTexture","bb","bgSprite","scalex","scaley","bottom","drawWidth","drawHeight","scale","createButtonDoors","buttonCoords","doorsCoords","horizontal","doors","map","coords","button","texturePressed","actors","onCollisionStart","onCollisionEnd","actor","Cyan","label2","score","scoreLabel","continue","text","scaleTo","stopTime","getTime","showDeath","White","Right","showing","msToTime","duration","dur","milliseconds","seconds","minutes","toFixed","createTimer","time","toString","setInterval","resetTime","clearInterval","interval","copyright","csprite","wall_1","finish_1","createButtonDoors_1","lodash_1","excalibur_1","mlt","mlb","mrt","mrb","mel","mer","met","mlr","mtb","mtt","mtd","mtr","mtl","clt","clb","crt","crb","cel","ced","cer","clr","ctb","ctt","ctd","mapA","mapB","offsetx","round","offsety","mapATiles","mapBTiles","buttonsDoorsAVertical","buttonsDoorsCoord","buttonsAVertical","item","doorsAVertical","buttonsDoorsAHorizontal","buttonsAHorizontal","doorsAHorizontal","buttonsDoorsBHorizontal","buttonsBHorizontal","doorsBHorizontal","buttonsDoorsBVertical","buttonsBVertical","doorsBVertical","dog1","dog2","dog3","dog4","dog5","concat","flatten","med","mcc","cet","ctr","ctl","buttonsDoorsA","buttonsA","doorsA","buttonsDoorsB","buttonsB","doorsB","emitter","ParticleEmitter","emitterType","EmitterType","Circle","radius","minVel","maxVel","minAngle","maxAngle","emitRate","fadeFlag","particleLife","maxSize","minSize","startSize","endSize","acceleration","Magenta","Rectangle"],"mappings":"aACA,SAAAA,EAAAC,GAOA,IANA,IAKAC,EAAAC,EALAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAGAM,EAAA,EAAAC,KACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAIA,IADAe,KAAAhB,GACAO,EAAAC,QACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,OAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,KACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,MAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAGA,OAAAD,EAIA,IAAAQ,KAKApB,GACAqB,EAAA,GAGAZ,KAGA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,IACAK,EAAAL,EACAgC,KACAF,YAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,KAGAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACAX,EAAAY,EAAAR,EAAAM,IACA1B,OAAA6B,eAAAT,EAAAM,GACAI,gBACAC,cACAC,IAAAL,KAMAX,EAAAiB,EAAA,SAAAb,GACApB,OAAA6B,eAAAT,EAAA,cAAiDc,YAIjDlB,EAAAmB,EAAA,SAAAd,GACA,IAAAM,EAAAN,KAAAe,WACA,WAA2B,OAAAf,EAAAgB,SAC3B,WAAiC,OAAAhB,GAEjC,OADAL,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAU,EAAAC,GAAsD,OAAAvC,OAAAC,UAAAC,eAAAC,KAAAmC,EAAAC,IAGtDvB,EAAAwB,EAAA,GAEA,IAAAC,EAAAC,OAAAC,aAAAD,OAAAC,iBACAC,EAAAH,EAAA1C,KAAA8C,KAAAJ,GACAA,EAAA1C,KAAAX,EACAqD,IAAAK,QACA,QAAAnD,EAAA,EAAgBA,EAAA8C,EAAA5C,OAAuBF,IAAAP,EAAAqD,EAAA9C,IACvC,IAAAU,EAAAuC,EAIArC,EAAAR,MAAA,OAEAU,qGCrIA,IAAAsC,EAAA/B,EAAA,IAEMgC,EAAUhC,EAAQ,KAClBiC,EAAWjC,EAAQ,KAEnBkC,EAAUlC,EAAQ,KAClBmC,EAAanC,EAAQ,KACrBoC,EAAWpC,EAAQ,KACnBqC,EAAcrC,EAAQ,KAEtBsC,EAAUtC,EAAQ,KAClBuC,EAAUvC,EAAQ,KAClBwC,EAAWxC,EAAQ,KACnByC,EAASzC,EAAQ,KAEjB0C,EAAU1C,EAAQ,KAClB2C,EAAY3C,EAAQ,KAEpB4C,EAAQ5C,EAAQ,KAChB6C,EAAO7C,EAAQ,KACf8C,EAAQ9C,EAAQ,KAChB+C,EAAS/C,EAAQ,KACjBgD,EAAQhD,EAAQ,KAEhBiD,EAAMjD,EAAQ,KACdkD,EAAalD,EAAQ,KAErBmD,EAAMnD,EAAQ,KACdoD,EAAMpD,EAAQ,KAEdqD,EAAMrD,EAAQ,KACdsD,EAAMtD,EAAQ,KAEduD,EAAUvD,EAAQ,KAClBwD,EAAWxD,EAAQ,KAGrByD,GACAzB,QAAS,IAAID,EAAG2B,QAAQ1B,GACxBC,SAAU,IAAIF,EAAG2B,QAAQzB,GAEzBsB,QAAS,IAAIxB,EAAG2B,QAAQH,GACxBC,SAAU,IAAIzB,EAAG2B,QAAQF,GAEzBP,IAAK,IAAIlB,EAAG2B,QAAQT,GACpBC,WAAY,IAAInB,EAAG2B,QAAQR,GAE3BS,qBAAsB,IAAI5B,EAAG2B,QAAQP,GACrCS,mBAAoB,IAAI7B,EAAG2B,QAAQN,GACnCS,mBAAoB,IAAI9B,EAAG2B,QAAQL,GACnCS,iBAAkB,IAAI/B,EAAG2B,QAAQJ,GAEjCpB,QAAS,IAAIH,EAAG2B,QAAQxB,GACxBC,WAAY,IAAIJ,EAAG2B,QAAQvB,GAC3BC,SAAU,IAAIL,EAAG2B,QAAQtB,GACzBC,YAAa,IAAIN,EAAG2B,QAAQrB,GAE5BC,QAAS,IAAIP,EAAG2B,QAAQpB,GACxBC,QAAS,IAAIR,EAAG2B,QAAQnB,GACxBC,SAAU,IAAIT,EAAG2B,QAAQlB,GACzBC,OAAQ,IAAIV,EAAG2B,QAAQjB,GAEvBC,QAAS,IAAIX,EAAG2B,QAAQhB,GACxBC,UAAW,IAAIZ,EAAG2B,QAAQf,GAE1BC,MAAO,IAAIb,EAAG2B,QAAQd,GACtBC,KAAM,IAAId,EAAG2B,QAAQb,GACrBC,MAAO,IAAIf,EAAG2B,QAAQZ,GACtBC,OAAQ,IAAIhB,EAAG2B,QAAQX,GACvBC,MAAO,IAAIjB,EAAG2B,QAAQV,IAGjB5C,EAAAqD,qGCxET,IAAA1B,EAAA/B,EAAA,IAEMgC,EAAUhC,EAAQ,KAClBiC,EAAWjC,EAAQ,KAEnBkC,EAAUlC,EAAQ,KAClBmC,EAAanC,EAAQ,KACrBoC,EAAWpC,EAAQ,KACnBqC,EAAcrC,EAAQ,KAEtBsC,EAAUtC,EAAQ,KAClBuC,EAAUvC,EAAQ,KAClBwC,EAAWxC,EAAQ,KACnByC,EAASzC,EAAQ,IAEjB0C,EAAU1C,EAAQ,IAClB2C,EAAY3C,EAAQ,IAEpB4C,EAAQ5C,EAAQ,IAChB6C,EAAO7C,EAAQ,IACf8C,EAAQ9C,EAAQ,IAChB+C,EAAS/C,EAAQ,IACjBgD,EAAQhD,EAAQ,IAEhBiD,EAAMjD,EAAQ,IACdkD,EAAalD,EAAQ,IAErBmD,EAAMnD,EAAQ,IACdoD,EAAMpD,EAAQ,IAEdqD,EAAMrD,EAAQ,IACdsD,EAAMtD,EAAQ,IAEduD,EAAUvD,EAAQ,IAClBwD,EAAWxD,EAAQ,IAGrB+D,GACA/B,QAAS,IAAID,EAAG2B,QAAQ1B,GACxBC,SAAU,IAAIF,EAAG2B,QAAQzB,GAEzBsB,QAAS,IAAIxB,EAAG2B,QAAQH,GACxBC,SAAU,IAAIzB,EAAG2B,QAAQF,GAEzBP,IAAK,IAAIlB,EAAG2B,QAAQT,GACpBC,WAAY,IAAInB,EAAG2B,QAAQR,GAE3BS,qBAAsB,IAAI5B,EAAG2B,QAAQP,GACrCS,mBAAoB,IAAI7B,EAAG2B,QAAQN,GACnCS,mBAAoB,IAAI9B,EAAG2B,QAAQL,GACnCS,iBAAkB,IAAI/B,EAAG2B,QAAQJ,GAEjCpB,QAAS,IAAIH,EAAG2B,QAAQxB,GACxBC,WAAY,IAAIJ,EAAG2B,QAAQvB,GAC3BC,SAAU,IAAIL,EAAG2B,QAAQtB,GACzBC,YAAa,IAAIN,EAAG2B,QAAQrB,GAE5BC,QAAS,IAAIP,EAAG2B,QAAQpB,GACxBC,QAAS,IAAIR,EAAG2B,QAAQnB,GACxBC,SAAU,IAAIT,EAAG2B,QAAQlB,GACzBC,OAAQ,IAAIV,EAAG2B,QAAQjB,GAEvBC,QAAS,IAAIX,EAAG2B,QAAQhB,GACxBC,UAAW,IAAIZ,EAAG2B,QAAQf,GAE1BC,MAAO,IAAIb,EAAG2B,QAAQd,GACtBC,KAAM,IAAId,EAAG2B,QAAQb,GACrBC,MAAO,IAAIf,EAAG2B,QAAQZ,GACtBC,OAAQ,IAAIhB,EAAG2B,QAAQX,GACvBC,MAAO,IAAIjB,EAAG2B,QAAQV,IAGjB5C,EAAA2D,kGCxET,IAAAC,EAAAhE,EAAA,IAASI,EAAA6D,OAAAD,EAAA3C,QACT,IAAA6C,EAAAlE,EAAA,IAASI,EAAA+D,WAAAD,EAAA7C,QACT,IAAA+C,EAAApE,EAAA,IAASI,EAAAiE,gBAAAD,EAAA/C,QACT,IAAAiD,EAAAtE,EAAA,IAASI,EAAAmE,gBAAAD,EAAAjD,QACT,IAAAmD,EAAAxE,EAAA,IAASI,EAAAqE,MAAAD,EAAAnD,uFCJT,IAAAU,EAAA/B,EAAA,IACM0E,EAAQ1E,EAAQ,KAEhB2E,GADS3E,EAAQ,KACTA,EAAQ,MAChB4E,EAAO5E,EAAQ,KACf6E,EAAS7E,EAAQ,KAEjB8E,EAAW9E,EAAQ,KACnB+E,EAAK/E,EAAQ,KAEfgF,GACAC,MAAO,IAAIlD,EAAG2B,QAAQgB,GACtBQ,MAAO,IAAInD,EAAG2B,QAAQiB,GACtBQ,KAAM,IAAIpD,EAAG2B,QAAQkB,GACrBQ,OAAQ,IAAIrD,EAAG2B,QAAQmB,GAEvBQ,GAAI,IAAItD,EAAG2B,QAAQqB,GACnBO,SAAU,IAAIvD,EAAG2B,QAAQoB,IAGpB1E,EAAA4E,iZCpBT,IAAAjD,EAAA/B,EAAA,IACAuF,EAAAvF,EAAA,KACAwF,EAAAxF,EAAA,IACAyF,EAAAzF,EAAA,IACA0F,EAAA1F,EAAA,IACA2F,EAAA3F,EAAA,IACA4F,EAAA5F,EAAA,IACA6F,EAAA7F,EAAA,IACA8F,EAAA9F,EAAA,IACA+F,EAAA/F,EAAA,IACAgG,EAAAhG,EAAA,IACAiG,EAAAjG,EAAA,IACAkG,EAAAlG,EAAA,IACAmG,EAAAnG,EAAA,IAEaI,EAAAgG,aAAe,IAAIrE,EAAGsE,oBAEnC,IAAAC,EAAA,SAAAC,GAGE,SAAAD,IAAA,IAAAE,EACED,EAAApH,KAAAsH,MACEC,MAAO,IACPC,OAAQ,IACRC,YAAa7E,EAAG8E,YAAYC,WAC5BC,gBAAiBhF,EAAGiF,MAAMC,QAAQ,EAAG,EAAG,EAAG,GAC3CC,gBAAiB,UACjBT,YATJD,EAAAW,kBACAX,EAAAY,kBAA0BC,EAc5B,OAhB0BC,EAAAhB,EAAAC,GAajBD,EAAArH,UAAAsI,MAAP,SAAaC,GACX,OAAOjB,EAAAtH,UAAMsI,MAAKpI,KAAAsH,KAACe,IAEvBlB,EAhBA,CAA0BvE,EAAG0F,QAAhBrH,EAAAkG,OAqBb,IAAMoB,EAAO,IAAIpB,EACbkB,EAAS,IAAIzF,EAAG4F,OACdC,EAAQ,IAAI5B,EAAA6B,UAAUH,GACtBI,EAAY,IAAI7B,EAAA8B,UAAUL,GAE1BM,EAAU,IAAItC,EAAAuC,OAAO,EAAG,MACxBC,EAAU,IAAIxC,EAAAuC,OAAO,EAAG,MAGxBE,EAAO,IAAItC,EAAAuC,KAAKV,GAEhBW,GACJ,IAAI9C,EAAA+C,SAASN,EAASE,EAASR,EAAME,EAAOE,GAC5C,IAAItC,EAAA+C,SAASP,EAASE,EAASR,EAAME,EAAOE,GAC5C,IAAIrC,EAAA+C,WAAWR,EAASE,EAASR,EAAME,EAAOE,GAC9C,IAAI5B,EAAAuC,UAAUf,EAAME,IAIlBc,EAAS,EACTC,EAAQN,EAAOK,GACfE,KAKJlB,EAAKmB,SAAS,OAAQV,GACtBE,EAAOS,QAAQ,SAACH,EAAOhK,GAAM,OAAA+I,EAAKmB,SAAS,QAAQlK,EAAKgK,KAKxDjB,EAAKqB,MAAMC,SAASC,QAAQC,GAAG,OAAQ,SAACC,GACtCC,QAAQC,IAAIF,GAEZzB,EAAKqB,MAAMC,SAASC,QAAQK,IAAI,QAEhC1B,EAAM2B,QAAQ,GACd7B,EAAK8B,UAAU,YAGjB,IASMC,EAAe,SAACC,GAQpB,GAPIhC,EAAKN,gBACHsC,EAAMC,MAAQ/D,EAAAgE,KAAKC,QACrBjB,GAAWA,EACXD,EAAMmB,WAAWlB,IAIhBlB,EAAKP,eAAV,CAEIO,EAAKN,gBAAkBM,EAAKP,iBAC9BO,EAAKN,kBAELuB,EAAQN,EADRK,EAAS,GAEThB,EAAKqB,MAAMC,SAASC,QAAQC,GAAG,OAAQ,WAErCxB,EAAKqB,MAAMC,SAASC,QAAQK,IAAI,QAEhC1B,EAAM2B,QAAQ,GACd7B,EAAK8B,UAAU,YAEjB9B,EAAK8B,UAAU,SAGbE,EAAMC,MAAQ/D,EAAAgE,KAAKC,QACrBjB,GAAWA,EACXD,EAAMmB,WAAWlB,IAEb,IAAAmB,EAAAnB,EAAAZ,EAAAE,EAAE8B,EAAAD,EAAAC,EAAGC,EAAAF,EAAAE,EACPP,EAAMC,MAAQ/D,EAAAgE,KAAKM,GACrB9J,EAAAgG,aAAa+D,KAAK,cAAe,IAAIhE,EAAAiE,WAAWJ,EAAGC,IAAGrB,IAEpDc,EAAMC,MAAQ/D,EAAAgE,KAAKS,GACrBjK,EAAAgG,aAAa+D,KAAK,iBAStB,IAAK,IAAIR,KANTjC,EAAKqB,MAAMuB,SAASpB,GAAG,OA7CH,SAACQ,GACdhC,EAAKP,iBAENyB,EACFZ,EAAQuC,KAAKb,GAEbxB,EAAQqC,KAAKb,MAwCjBhC,EAAKqB,MAAMuB,SAASpB,GAAG,QAASO,GAKhB9D,EAAAX,UACdwC,EAAOgD,YAAY7E,EAAAX,UAAU2E,IAE/B,IAAK,IAAIA,KAAO7D,EAAArC,iBACd+D,EAAOgD,YAAY1E,EAAArC,iBAAiBkG,IAEtC,IAAK,IAAIA,KAAO5D,EAAAhC,cACdyD,EAAOgD,YAAYzE,EAAAhC,cAAc4F,IAMnCvJ,EAAAgG,aAAa8C,GAAG,cAAe,SAAAuB,GAE7B9B,EAAQN,IADRK,GAEAhB,EAAK8B,UAAU,QAAQd,GACvBC,EAAM+B,aACN9B,KACAD,EAAMmB,WAAWlB,GACjBZ,EAAQ2C,OAAO/B,GACfV,EAAQyC,QAAQ/B,KAGlBxI,EAAAgG,aAAa8C,GAAG,cAAe,SAACQ,GAG9BhC,EAAK8B,UAAU,QAAQd,GACvBC,EAAM+B,aACN/B,EAAMiC,kBAAkBlB,EAAMM,EAAGN,EAAMO,EAAGP,EAAMmB,KAChDjC,KACAD,EAAMmB,WAAWlB,GACjBZ,EAAQ2C,OAAO/B,GACfV,EAAQyC,QAAQ/B,KAGlB,IAAMkC,EAAe,SAACnB,GAChBjC,EAAKqB,MAAMuB,SAASS,OAAOpB,IAC7BqB,WAAW,SAAAP,GAAK,OAAAhB,EAAa,IAAI1H,EAAGkJ,MAAMC,SAASvB,KAAO,KAG9DvJ,EAAAgG,aAAa8C,GAAG,UAAW,SAAAuB,GACzBK,EAAa/I,EAAGkJ,MAAMrB,KAAKuB,GAC3BL,EAAa/I,EAAGkJ,MAAMrB,KAAKwB,GAC3BN,EAAa/I,EAAGkJ,MAAMrB,KAAKyB,GAC3BP,EAAa/I,EAAGkJ,MAAMrB,KAAK0B,KAM7B5D,EAAKH,MAAMC,GAAQ+D,KAAK,WACtB7D,EAAK8B,UAAU,sBAAAgC,EAAAnE,EAAAzG,GAAA,iBAAAO,EAAAF,EAAAwF,WAAAa,YAAAnG,EAAAnC,OAAAyM,iBAAAC,wBAAAC,OAAA,SAAAH,EAAAnE,GAAAmE,EAAAE,UAAArE,IAAA,SAAAmE,EAAAnE,GAAA,QAAAzG,KAAAyG,IAAAnI,eAAA0B,KAAA4K,EAAA5K,GAAAyG,EAAAzG,KAAA,SAAA4K,EAAAnE,GAAA,SAAAzG,IAAA6F,KAAAmF,YAAAJ,EAAArK,EAAAqK,EAAAnE,GAAAmE,EAAAvM,UAAA,OAAAoI,EAAArI,OAAA6M,OAAAxE,IAAAzG,EAAA3B,UAAAoI,EAAApI,UAAA,IAAA2B,KAAA5B,OAAA6B,eAAAwG,EAAA,cAAAnG,OAAA,ICtLjB,IAAAa,EAAA/B,EAAA,IACA4F,EAAA5F,EAAA,IACA8L,EAAA9L,EAAA,IACA2F,EAAA3F,EAAA,IACA8F,EAAA9F,EAAA,IACA+F,EAAA/F,EAAA,IACA+L,EAAA/L,EAAA,IAEAgM,EAAAhM,EAAA,IAEMiM,EAAO,GAEbhE,EAAA,SAAA1B,GAQI,SAAA0B,EAAYiE,EAAYC,EAAYtB,GAApC,IAAArE,EACID,EAAApH,KAAAsH,OAAOA,KAUiC2F,OAjBpC5F,EAAA6F,YAAcP,EAAAQ,SAAUP,EAAA5G,MAqChCqB,EAAAmE,OAAS,SAAC4B,GACN/F,EAAKgG,WAAWD,EAAO,OAAS,WAGpC/F,EAAAiG,WAAa,WACTjG,EAAKwD,EAAIxD,EAAKkG,KAAK1C,EACnBxD,EAAKyD,EAAIzD,EAAKkG,KAAKzC,GAGvBzD,EAAAmG,OAAS,SAACC,EAAkBC,EAAmB7C,EAAWC,GACtDzD,EAAKoG,SAAWA,EAChBpG,EAAKqG,UAAYA,EACjBrG,EAAKwD,EAAIxD,EAAKoG,SAAW5C,EAAIiC,EAC7BzF,EAAKyD,EAAIzD,EAAKqG,UAAY5C,EAAIgC,EAC9BzF,EAAKkG,MAAS1C,EAAGxD,EAAKwD,EAAGC,EAAGzD,EAAKyD,IAGrCzD,EAAA+D,KAAO,SAACb,GACJ,IAAIlD,EAAKsG,OAAT,CACAtG,EAAKsG,UACLtG,EAAKuG,UAAU,KACf,IAAM/C,EAAIN,EAAMC,MAAQ/D,EAAAgE,KAAKwB,GACtB,EACD1B,EAAMC,MAAQ/D,EAAAgE,KAAK0B,EACf,EACA,EAEJrB,EAAIP,EAAMC,MAAQ/D,EAAAgE,KAAKuB,GACtB,EACDzB,EAAMC,MAAQ/D,EAAAgE,KAAKyB,EACf,EACA,EAENrB,EAAI,GAAGxD,EAAKgG,WAAW,QACvBxC,EAAI,GAAGxD,EAAKgG,WAAW,SAE3BhG,EAAKkG,MAAS1C,EAAGxD,EAAKwD,EAAGC,EAAGzD,EAAKyD,GAEjCe,WAAW,SAAAP,GACPjE,EAAKwD,EAAIxD,EAAKwD,EAAIA,EAAIiC,EACtBzF,EAAKyD,EAAIzD,EAAKyD,EAAIA,EAAIgC,GACvB,GAEHjB,WAAW,SAAAP,GAAK,OAAAjE,EAAKsG,WAAgB,OAxErCtG,EAAKwG,SAASf,GACdzF,EAAKyG,UAAUhB,GACfzF,EAAKwD,EAAIiC,EAAOC,EAAKD,EACrBzF,EAAKyD,EAAIgC,EAAOE,EAAKF,EACrBzF,EAAKkG,MAAS1C,EAAGxD,EAAKwD,EAAGC,EAAGzD,EAAKyD,GACjCzD,EAAK0G,MAAQ,IAAInL,EAAGiF,MAAM,IAAK,IAAK,KACpCR,EAAK2G,cAAgBpL,EAAGqL,cAAcC,QACtC7G,EAAKqE,IAAMA,EACXrE,EAAKsG,UACUhH,EAAArC,iBAAiBzB,QAAQoK,WAExC5F,EAAK8G,WAAW,OAAQzC,EAAM/E,EAAArC,iBAAiBzB,QAAQoK,WAAarG,EAAAhC,cAAc/B,QAAQoK,YAC1F5F,EAAK8G,WAAW,QAASzC,EAAM/E,EAAArC,iBAAiBxB,SAASmK,WAAarG,EAAAhC,cAAc9B,SAASmK,YAC7F5F,EAAK8G,WAAW,SAAU3H,EAAAX,UAAUE,MAAMkH,YAC1C5F,EAAKgG,WAAW,QAChBhG,EAAKmE,WACLnE,EAAK+G,IAAK1C,EAAwBmB,EAAAzH,gBAAlByH,EAAA3H,iBAEhBmC,EAAK0C,GAAG,eAAgB,SAACsE,GAChBhH,EAAK6F,WAAWoB,KAAK,SAAAC,GAAoB,OAAAF,EAAGG,iBAAiBD,MAC9DF,EAAGG,iBAAiB5B,EAAA5G,MAASqI,EAAGG,MAAeC,QAE/CJ,EAAGG,iBAAiB7B,EAAAQ,UAAYkB,EAAGG,MAAM9C,MAAQrE,EAAKqE,MAE1DzB,QAAQC,IAAI,SAAU7C,EAAKwD,EAAGxD,EAAKyD,EAAGuD,EAAGG,MAAM3D,EAAGwD,EAAGG,MAAM1D,GAC3DzD,EAAKiG,mBAiDjB,OApF4BnF,EAAAW,EAAA1B,GAoF5B0B,EApFA,CAA4BlG,EAAG8L,OAAlBzN,EAAA6H,kkBCZb,IAAAlG,EAAA/B,EAAA,IAGA2F,EAAA3F,EAAA,IACA8F,EAAA9F,EAAA,IACA+F,EAAA/F,EAAA,IACA+L,EAAA/L,EAAA,IACA8N,EAAA9N,EAAA,IAEA0F,EAAA1F,EAAA,IACA+N,EAAA/N,EAAA,IACAgO,EAAAhO,EAAA,IAGMiM,EAAO,GAEb7B,EAAA,SAAA7D,GAII,SAAA6D,EAAYJ,EAAWC,EAAWY,GAAlC,IAAArE,EACID,EAAApH,KAAAsH,OAAOA,YAEPD,EAAKwD,EAAIA,EACTxD,EAAKyD,EAAIA,EACTzD,EAAKqE,IAAMA,IAEnB,OAXgCvD,EAAA8C,EAAA7D,GAWhC6D,EAXA,CAJApK,EAAA,IAIgCiO,WAAnB7N,EAAAgK,aAab,IAAA8D,EAAA,SAAA3H,GAYI,SAAA2H,EAAYtB,EAAkBC,EAAmBX,EAAYC,EAAYtB,GAAzE,IAAArE,EACID,EAAApH,KAAAsH,OAAOA,YATXD,EAAA2H,MAAQ,EACR3H,EAAA4H,aAyCA5H,EAAAmG,OAAS,SAACC,EAAkBC,EAAmB7C,EAAWC,EAAWoE,GAMjE,GALA7H,EAAKoG,SAAWA,EAChBpG,EAAKqG,UAAYA,EACjBrG,EAAKwD,EAAIxD,EAAKoG,SAAY5C,EAAIiC,EAC9BzF,EAAKyD,EAAIzD,EAAKqG,UAAY5C,EAAIgC,EAC9BzF,EAAKkG,KAAO,IAAI3K,EAAGuM,OAAO9H,EAAKwD,EAAGxD,EAAKyD,IACnCzD,EAAK+H,OAAT,CACA,IAAMC,EAAShI,EAAKwD,GAAKxD,EAAKoG,SAAWX,EAAOoC,EAAGrE,GAC/CwE,EAAS,GAAGhI,EAAKgG,WAAW,SAC5BgC,EAAS,GAAGhI,EAAKgG,WAAW,UAGpChG,EAAAiI,QAAU,SAACJ,EAAeK,GACtB,IAAMF,EAAShI,EAAKwD,GAAKxD,EAAKoG,SAAWX,EAAOoC,EAAGrE,GAEnDxD,EAAKmI,QACAC,WAAW,WACJpI,EAAK+H,SACLC,EAAS,GAAGhI,EAAKgG,WAAW,SAC5BgC,EAAS,GAAGhI,EAAKgG,WAAW,WAEnCqC,OACGrI,EAAKoG,SAAWyB,EAAGrE,EAAIiC,EACvBzF,EAAKqG,UAAYwB,EAAGpE,EAAIgC,EACxByC,GAEHI,MAAM,IACNF,WAAW,WACJpI,EAAK+H,SACLC,EAAS,GAAGhI,EAAKgG,WAAW,QAC5BgC,EAAS,GAAGhI,EAAKgG,WAAW,YAEnCqC,OACGrI,EAAKkG,KAAK1C,EACVxD,EAAKkG,KAAKzC,EACVyE,GAEHK,iBAGTvI,EAAAmE,OAAS,SAAC4B,GACN/F,EAAK+H,QAAUhC,EACf/F,EAAKgG,WAAWD,EAAO,OAAS,WAGpC/F,EAAA+D,KAAO,SAACyE,GACAA,EAAMhF,EAAI,GAAGxD,EAAKgG,WAAW,QAC7BwC,EAAMhF,EAAI,GAAGxD,EAAKgG,WAAW,SAGjChG,EAAKkG,KAAIuC,KAAQzI,EAAK0I,MACtB1I,EAAK0I,MAASlF,EAAGxD,EAAK0I,KAAKlF,EAAIgF,EAAMhF,EAAIiC,EAAMhC,EAAGzD,EAAK0I,KAAKjF,EAAI+E,EAAM/E,EAAIgC,GAE3DzF,EAAKmI,QAAQE,OAAOrI,EAAK0I,KAAKlF,EAAGxD,EAAK0I,KAAKjF,EAAG,KAAKkF,aArFlE3I,EAAKwG,SAASf,GACdzF,EAAKyG,UAAUhB,GACfzF,EAAKwD,EAAI4C,EAAWV,EAAKD,EACzBzF,EAAKyD,EAAI4C,EAAYV,EAAKF,EAC1BzF,EAAK0I,MAASlF,EAAGxD,EAAKwD,EAAGC,EAAGzD,EAAKyD,GACjCzD,EAAKkG,MAAS1C,EAAGxD,EAAKwD,EAAGC,EAAGzD,EAAKyD,GACjCzD,EAAK0G,MAAQ,IAAInL,EAAGiF,MAAM,IAAK,IAAK,KACpCR,EAAK2G,cAAgBpL,EAAGqL,cAAcC,QACtC7G,EAAKqE,IAAMA,EACXrE,EAAKoG,SAAWA,EAChBpG,EAAKqG,UAAYA,EAEjBrG,EAAK8G,WAAW,OAAQzC,EAAM/E,EAAArC,iBAAiBF,QAAQ6I,WAAarG,EAAAhC,cAAcR,QAAQ6I,YAC1F5F,EAAK8G,WAAW,QAASzC,EAAM/E,EAAArC,iBAAiBD,SAAS4I,WAAarG,EAAAhC,cAAcP,SAAS4I,YAC7F5F,EAAK8G,WAAW,SAAU3H,EAAAX,UAAUE,MAAMkH,YAC1C5F,EAAKmE,WAELnE,EAAK0C,GAAG,iBAAkB,SAACsE,GACnBA,EAAGG,iBAAiB5B,EAAA5G,MAASqI,EAAGG,MAAeC,QAC/CJ,EAAGG,iBAAiBK,EAAAoB,QAEpB5B,EAAGG,iBAAiBjI,EAAAuC,QAAUuF,EAAGG,MAAM9C,MAAQA,GAC/CiD,EAAA1H,aAAa+D,KAAK,cAAe,IAAIC,EAAWoD,EAAGG,MAAM3D,EAAGwD,EAAGG,MAAM1D,EAAGY,MAGhFiD,EAAA1H,aAAa8C,GAAG,aAAc,SAAAQ,GACtBA,aAAiBqE,EAAAsB,iBACjB7I,EAAKmE,OAAOjB,EAAMrL,OAASmI,EAAKqE,SA4DhD,OArG4BvD,EAAA4G,EAAA3H,GAqG5B2H,EArGA,CAA4BnM,EAAG8L,OAAlBzN,EAAA8N,0YC7Bb,IAAAnM,EAAA/B,EAAA,IAIAsP,EAAAtP,EAAA,IACA8N,EAAA9N,EAAA,IACAmG,EAAAnG,EAAA,IAEAgM,EAAAhM,EAAA,IAEAqP,EAAA,SAAA9I,GAEI,SAAA8I,EAAYhR,GAAZ,IAAAmI,EACID,EAAApH,KAAAsH,OAAOA,YACPD,EAAKnI,KAAOA,IAEpB,OANqCiJ,EAAA+H,EAAA9I,GAMrC8I,EANA,CAAqCtN,EAAGkM,WAA3B7N,EAAAiP,kBAQb,IAAAE,EAAA,SAAAhJ,GAkCI,SAAAgJ,EAAYvH,EAAiBE,EAAiBsH,EAAsBC,EAAsBC,GAA1F,IAAAlJ,EACID,EAAApH,KAAAsH,OAAOA,YAXHD,EAAAoC,WAsBRpC,EAAAmJ,WAAa,SAAC/C,EAAkBC,EAAmB+C,EAAYC,EAAYC,EAAYC,GACnFvJ,EAAK+G,IAAI/G,EAAKwB,SACdxB,EAAK+G,IAAI/G,EAAK0B,SACd1B,EAAKwB,QAAQyE,aACbjG,EAAK0B,QAAQuE,aACbjG,EAAKwB,QAAQ2E,OAAOC,EAAUC,EAAW+C,EAAIC,GAC7CrJ,EAAK0B,QAAQyE,OAAOC,EAAUC,EAAWiD,EAAIC,GAE7CvJ,EAAK0C,GAAG,eAAgB,SAAAuB,GACpBjE,EAAKoC,SAAWpC,EAAKoC,QACrBpC,EAAKsD,WAAWtD,EAAKoC,WAGzBpC,EAAKsD,eACLtD,EAAKsD,eACLtD,EAAKsD,WAAWtD,EAAKoC,UAGjBpC,EAAAwJ,MAAQ,WAGZxJ,EAAKyJ,QAAQnH,QAAQ,SAAAkB,GACbA,aAAa7D,EAAA+H,QACjB1H,EAAK0J,OAAOlG,KAEhBxD,EAAK2J,QAAQrH,QAAQ,SAAAkB,GACbA,aAAa7D,EAAA+H,QACjB1H,EAAK0J,OAAOlG,MAIpBxD,EAAAsD,WAAa,SAAClB,GACVkF,EAAA1H,aAAa+D,KAAK,aAAc,IAAIkF,EAAgBzG,IACpDpC,EAAKwB,QAAQ2C,OAAO/B,GACpBpC,EAAK0B,QAAQyC,QAAQ/B,GACrBpC,EAAKwJ,QACDpH,EAEApC,EAAKyJ,QAAQnH,QAAQ,SAAAkB,GAAK,OAAAxD,EAAK+G,IAAIvD,KAGnCxD,EAAK2J,QAAQrH,QAAQ,SAAAkB,GAAK,OAAAxD,EAAK+G,IAAIvD,MAI3CxD,EAAA4J,gBAAkB,SAACC,GACf,IAAI7J,EAAK8J,WAAT,CACA,IAAMC,EAAQ,IAAIxO,EAAGyO,MACjB,SAASH,EACT7J,EAAKkJ,OAAOe,iBAAiBC,MAAQ,EACrClK,EAAKkJ,OAAOe,iBAAiBE,IAAM,IAGvCJ,EAAMK,QAAU,EAChBL,EAAMM,WAAa,mBACnBN,EAAMO,SAAW,GACjBP,EAAMrD,MAAQnL,EAAGiF,MAAM+J,OACvBR,EAAMS,UAAYjP,EAAGkP,UAAUC,OAE/B1K,EAAK+G,IAAIgD,GACTA,EAAMxD,UAAU,KAChBwD,EAAM5B,QACDwC,KAAK,EAAG,KACRA,KAAK,EAAG,KACb3K,EAAK8J,gBA1EL9J,EAAKkJ,OAASA,EACdlJ,EAAKkB,KAAOgI,EACZlJ,EAAKwB,QAAUA,EACfxB,EAAK0B,QAAUA,EACf1B,EAAKyJ,QAAUT,EACfhJ,EAAK2J,QAAUV,EACfjJ,EAAK+G,IAAI+B,EAAA8B,SAAS1B,IAClBlJ,EAAK+G,IAAIvB,EAAAvH,SAqEjB,OAhH2B6C,EAAAiI,EAAAhJ,GAChBgJ,EAAAtQ,UAAAoS,aAAP,SAAoB3B,KAEbH,EAAAtQ,UAAAyL,WAAP,aAEO6E,EAAAtQ,UAAAqS,aAAP,aAEO/B,EAAAtQ,UAAA2L,kBAAP,SAAyBZ,EAAWC,EAAWY,GAE3CmB,EAAAvH,MAAcuF,EAAIA,EAClBgC,EAAAvH,MAAcwF,EAAIA,EACbY,GAIDmB,EAAAvH,MAAc8M,WAAaxP,EAAGiF,MAAMwK,QAAQ,UAC5CxF,EAAAvH,MAAcgN,SAAW1P,EAAGiF,MAAMwK,QAAQ,YAJ1CxF,EAAAvH,MAAc8M,WAAaxP,EAAGiF,MAAMwK,QAAQ,UAC5CxF,EAAAvH,MAAcgN,SAAW1P,EAAGiF,MAAMwK,QAAQ,WAK9CxF,EAAAvH,MAAciN,cACd1G,WAAW,WACPgB,EAAAvH,MAAciN,eACf,MA2FXnC,EAhHA,CAA2BxN,EAAG4P,OAAjBvR,EAAAmP,qZClBb,IAAAxN,EAAA/B,EAAA,IAGA4R,EAAA5R,EAAA,IACA0F,EAAA1F,EAAA,IACA2F,EAAA3F,EAAA,IACAgM,EAAAhM,EAAA,IAEMiM,EAAO,GAEb7G,EAAA,SAAAmB,GAII,SAAAnB,EAAYwH,EAAkBC,EAAmBX,EAAYC,EAAYnE,EAAiBE,GAA1F,IAAA1B,EACID,EAAApH,KAAAsH,OAAOA,YACPD,EAAKwG,SAASf,GACdzF,EAAKyG,UAAUhB,GACfzF,EAAKwB,QAAUA,EACfxB,EAAK0B,QAAUA,EACf1B,EAAKwD,EAAI4C,EAAWV,EAAKD,EACzBzF,EAAKyD,EAAI4C,EAAYV,EAAKF,EAC1BzF,EAAK0G,MAAQ,IAAInL,EAAGiF,MAAM,IAAK,IAAK,KACpCR,EAAK2G,cAAgBpL,EAAGqL,cAAcC,QAEtC7G,EAAK8G,WAAW3H,EAAAX,UAAUI,QAE1BoB,EAAK+G,IAAIvB,EAAA/H,QAETuC,EAAK0C,GAAG,iBAAkB,SAACsE,GACvB,GAAMA,EAAGG,iBAAiBjI,EAAAuC,OAA1B,CAEA,IAAM4J,EAAMrL,EAAKsL,SAAStE,EAAGG,OACjB,OAARkE,GAAgBE,KAAKC,IAAIH,EAAI7H,GAAK,GAAK+H,KAAKC,IAAIH,EAAI5H,GAAK,IAE7Db,QAAQC,IAAI7C,EAAKsL,SAAStL,EAAKwB,SAAU,KACzCoB,QAAQC,IAAI7C,EAAKsL,SAAStL,EAAK0B,SAAU,KAErC1B,EAAKsL,SAAStL,EAAKwB,UAAYxB,EAAKsL,SAAStL,EAAK0B,UAClD0J,EAAAxL,aAAa+D,KAAK,mBAAA1J,EAIlC,OAjC4B6G,EAAAlC,EAAAmB,GAiC5BnB,EAjCA,CAA4BrD,EAAG8L,OAAlBzN,EAAAgF,wFCTb,IAAA0G,EAAA9L,EAAA,IACA8F,EAAA9F,EAAA,IAEaI,EAAA6R,WAAa,SAACjI,EAAWC,EAAWiI,EAAWC,EAAWC,EAAqBvH,GAExF,IADA,IAAIwH,KACKC,EAAK,EAAGA,EAAKJ,EAAGI,IACrB,IAAK,IAAIC,EAAK,EAAGA,EAAKJ,EAAGI,IAAM,CAC3B,IAAMC,EAAW,IAAI1G,EAAAQ,SAAS,EAAG,EAAGtC,EAAIsI,EAAIrI,EAAIsI,EAAIH,EAASvH,GAC7DwH,EAAMtT,KAAKyT,GAGnB,OAAOH,GAGEjS,EAAAqS,YAAc,SAAC7F,EAAkBC,EAAmB6F,EAAwC7H,GACrG,IAAM8H,KAUN,OATAD,EAAY5J,QAAQ,SAAC8J,EAAK3I,GACtB2I,EAAI9J,QAAQ,SAAC+I,EAAK7H,GACd,IAAM6I,EAAOH,EAAYzI,GAAGD,GACR,iBAAT6I,GAEPF,EAAM5T,KAAK,IAAI+M,EAAAQ,SAASM,EAAUC,EAAW7C,EAAGC,EAAG4I,EAAMhI,QAI9D8H,GAGEvS,EAAA0S,cAAgB,SAAClG,EAAkBC,EAAmBkG,EAAeC,EAAeZ,EAAqBvH,GAClH,IACM3I,EAAU,IAAI4J,EAAAQ,SAASM,EAAUC,EAAW,EAAG,EAAG/G,EAAArC,iBAAiBvB,QAAS2I,GAC5E1I,EAAa,IAAI2J,EAAAQ,SAASM,EAAUC,EAAW,EAAGmG,EAAQ,EAAGlN,EAAArC,iBAAiBtB,WAAY0I,GAC1FzI,EAAW,IAAI0J,EAAAQ,SAASM,EAAUC,EAAWkG,EAAQ,EAAG,EAAGjN,EAAArC,iBAAiBrB,SAAUyI,GACtFxI,EAAc,IAAIyJ,EAAAQ,SAASM,EAAUC,EAAWkG,EAAQ,EAAGC,EAAQ,EAAGlN,EAAArC,iBAAiBpB,YAAawI,GAEpGoI,EAAW7S,EAAA6R,WAAW,EAAG,EAAG,EAAGe,EAAQ,EAAGlN,EAAArC,iBAAiBf,QAASmI,GACpEqI,EAAU9S,EAAA6R,WAAW,EAAG,EAAGc,EAAQ,EAAG,EAAGjN,EAAArC,iBAAiBd,UAAWkI,GAErEsI,EAAY/S,EAAA6R,WAAWc,EAAQ,EAAG,EAAG,EAAGC,EAAQ,EAAGlN,EAAArC,iBAAiBf,QAASmI,GAC7EuI,EAAahT,EAAA6R,WAAW,EAAGe,EAAQ,EAAGD,EAAQ,EAAG,EAAGjN,EAAArC,iBAAiBd,UAAWkI,GAEtF,OACI3I,EACAC,EACAC,EACAC,UACG4Q,EACAC,EACAC,EACAC,qYClDX,IAAArR,EAAA/B,EAAA,IAEMiM,EAAO,GAEb9G,EAAA,SAAAoB,GAGE,SAAApB,EAAYyH,EAAkBC,EAAmBX,EAAYC,EAAYiG,EAAqBiB,GAA9F,IAAA7M,EACED,EAAApH,KAAAsH,OAAOA,YAHTD,EAAAoH,UAIEpH,EAAKwG,SAASf,GACdzF,EAAKyG,UAAUhB,GACfzF,EAAKwD,EAAI4C,EAAWV,EAAKD,EACzBzF,EAAKyD,EAAI4C,EAAYV,EAAKF,EAC1BzF,EAAK0G,MAAQ,IAAInL,EAAGiF,MAAM,IAAK,IAAK,KACpCR,EAAK8G,WAAW,SAAU8E,EAAQhG,YAClC5F,EAAK8G,WAAW,SAAU+F,EAAWjH,YACrC5F,EAAKgG,WAAWhG,EAAKoH,OAAS,SAAW,UACzCpH,EAAK2G,cAAgBpL,EAAGqL,cAAcC,QAEtC7G,EAAKmE,OAASnE,EAAKmE,OAAO9I,KAAK2E,KAOnC,OAtB0Bc,EAAAnC,EAAAoB,GAkBxBpB,EAAAlG,UAAA0L,OAAA,SAAO4B,GACL9F,KAAKmH,OAASrB,EACd9F,KAAK+F,WAAW/F,KAAKmH,OAAS,SAAW,WAE7CzI,EAtBA,CAA0BpD,EAAG8L,OAAhBzN,EAAA+E,sFCJb,IAAApD,EAAA/B,EAAA,IACA2F,EAAA3F,EAAA,IAEaI,EAAAgR,SAAW,SAAC1B,GACrB,IAAM4D,EAAK5D,EAAOe,iBACZ8C,EAAW5N,EAAAX,UAAUK,GAAG+G,WACxBoH,EAASF,EAAG5C,MAAQ,KACpB+C,EAASH,EAAGI,OAAS,KAC3BH,EAASvJ,EAAIuJ,EAASI,UAAY,EAClCJ,EAAStJ,EAAIsJ,EAASK,WAAa,EACnC,IAAM7O,EAAK,IAAIhD,EAAG8L,MAMlB,OALA9I,EAAGiF,EAAIsJ,EAAG5C,MAAQ,EAClB3L,EAAGkF,EAAIqJ,EAAGI,OAAS,EACnB3O,EAAG8O,MAAQ,IAAI9R,EAAGuM,OAAOkF,EAASC,EAASD,EAASC,EAAQD,EAASC,EAASD,EAASC,GACvF1O,EAAGuI,WAAWiG,GAEPxO,mFChBX,IAAAiJ,EAAAhO,EAAA,IACA+L,EAAA/L,EAAA,IAEA8F,EAAA9F,EAAA,IACA+F,EAAA/F,EAAA,IAOaI,EAAA0T,kBAAoB,SAAClH,EAAkBC,EAAmBkH,EAAsBC,EAAqBC,EAAqBpJ,GACrI,IAAMqJ,GAASF,GAAaG,IAAI,SAAAC,GAAU,WAAIrI,EAAA5G,KAC5CyH,EACAC,EACAuH,EAAOpK,EACPoK,EAAOnK,EACPgK,EACKpJ,EAEC9E,EAAAhC,cAAcJ,qBADdmC,EAAArC,iBAAiBE,qBAElBkH,EAEC9E,EAAAhC,cAAcF,mBADdiC,EAAArC,iBAAiBI,mBAEvBoQ,EACKpJ,EAEC9E,EAAAhC,cAAcH,mBADdkC,EAAArC,iBAAiBG,mBAElBiH,EAEC9E,EAAAhC,cAAcD,iBADdgC,EAAArC,iBAAiBK,oBAazB,OAASoQ,MAAKA,EAAEG,OAVD,IAAIrG,EAAAoB,OACjBxC,EACAC,EACAkH,EAAa/J,EACb+J,EAAa9J,EACbY,EAAM/E,EAAArC,iBAAiBR,IAAM8C,EAAAhC,cAAcd,IAC3C4H,EAAM/E,EAAArC,iBAAiBP,WAAa6C,EAAAhC,cAAcb,WAClDgR,EACArJ,sYCxCJ,IAAA9I,EAAA/B,EAAA,IACAmG,EAAAnG,EAAA,IACA0F,EAAA1F,EAAA,IAGMiM,EAAO,GAEbmD,EAAA,SAAA7I,GAGI,SAAA6I,EAAYxC,EAAkBC,EAAmBX,EAAYC,EAAYiG,EAAqBkC,EAA4BC,EAAoB1J,GAA9I,IAAArE,EACID,EAAApH,KAAAsH,OAAOA,YACPD,EAAKwG,SAASf,GACdzF,EAAKyG,UAAUhB,GACfzF,EAAKwD,EAAI4C,EAAWV,EAAKD,EACzBzF,EAAKyD,EAAI4C,EAAYV,EAAKF,EAC1BzF,EAAKqE,IAAMA,EACXrE,EAAK0G,MAAQ,IAAInL,EAAGiF,MAAM,IAAK,IAAK,KACpCR,EAAK8G,WAAW,UAAW8E,EAAQhG,YACnC5F,EAAK8G,WAAW,UAAWgH,EAAelI,YAC1C5F,EAAK2G,cAAgBpL,EAAGqL,cAAcC,QACtC7G,EAAK+N,OAASA,EACd/N,EAAKgG,WAAW,WAEhBhG,EAAK0C,GAAG,iBAAkB1C,EAAKgO,kBAC/BhO,EAAK0C,GAAG,eAAgB1C,EAAKiO,kBAwCrC,OA1D4BnN,EAAA8H,EAAA7I,GAqBxB6I,EAAAnQ,UAAAuV,iBAAA,SAAiBhH,GAAjB,IAAAhH,EAAAC,KACI,KAAI+G,EAAGG,iBAAiBxH,EAAA+H,QACpBV,EAAGG,iBAAiBjI,EAAAuC,QAAUuF,EAAGG,MAAM9C,MAAQpE,KAAKoE,KAAxD,CAEA,IAAMgH,EAAMpL,KAAKqL,SAAStE,EAAGG,OACjB,OAARkE,GAAgBE,KAAKC,IAAIH,EAAI7H,GAAK,GAAK+H,KAAKC,IAAIH,EAAI5H,GAAK,GAE7De,WAAW,SAAAP,GAEFjE,EAAKsL,SAAStE,EAAGG,QACtBnH,EAAK+N,OAAOzL,QAAQ,SAAA4L,GAChB,IAAM/J,EAAU+J,EAAc/J,OAC9BvB,QAAQC,IAAI,SACU,mBAAXsB,IACPA,MACAnE,EAAKgG,WAAW,eAGzB,MAGP4C,EAAAnQ,UAAAwV,eAAA,SAAejH,GAAf,IAAAhH,EAAAC,KACIuE,WAAW,SAAAP,GACH+C,EAAGG,iBAAiBxH,EAAA+H,QAEpB1H,EAAKsL,SAAStE,EAAGG,QACrBnH,EAAK+N,OAAOzL,QAAQ,SAAA4L,GAChB,IAAM/J,EAAU+J,EAAc/J,OAC9BvB,QAAQC,IAAI,WAEU,mBAAXsB,IACPA,MACAnE,EAAKgG,WAAW,eAGzB,KAEX4C,EA1DA,CAA4BrN,EAAG8L,OAAlBzN,EAAAgP,0YCPb,IAAArN,EAAA/B,EAAA,IAEMiM,EAAO,GAEbK,EAAA,SAAA/F,GAEI,SAAA+F,EAAYM,EAAkBC,EAAmBX,EAAYC,EAAYiG,EAAqBvH,GAA9F,IAAArE,EACID,EAAApH,KAAAsH,OAAOA,YACPD,EAAKwG,SAASf,GACdzF,EAAKyG,UAAUhB,GACfzF,EAAKwD,EAAI4C,EAAWV,EAAKD,EACzBzF,EAAKyD,EAAI4C,EAAYV,EAAKF,EAC1BzF,EAAKqE,IAAMA,EACXrE,EAAK0G,MAAQ,IAAInL,EAAGiF,MAAM,IAAK,IAAK,KACpCR,EAAK8G,WAAW8E,GAChB5L,EAAK2G,cAAgBpL,EAAGqL,cAAcC,UAE9C,OAb8B/F,EAAAgF,EAAA/F,GAa9B+F,EAbA,CAA8BvK,EAAG8L,OAApBzN,EAAAkM,6YCJb,IAAAvK,EAAA/B,EAAA,IASAsP,EAAAtP,EAAA,IAIAyI,EAAA,SAAAlC,GAiBI,SAAAkC,EAAYiH,EAAc9H,GAA1B,IAAApB,EACID,EAAApH,KAAAsH,OAAOA,YAuGXD,EAAAsD,WAAa,SAAClB,GACVQ,QAAQC,IAAI,QACZ7C,EAAK+J,MAAMrD,MAAQtE,EAAU7G,EAAGiF,MAAMwK,QAAQ,UAAYzP,EAAGiF,MAAM2N,KACnEnO,EAAKoO,OAAO1H,MAAQtE,EAAU7G,EAAGiF,MAAMwK,QAAQ,UAAYzP,EAAGiF,MAAM2N,KACpEnO,EAAKqO,MAAM3H,MAAQtE,EAAU7G,EAAGiF,MAAMwK,QAAQ,UAAYzP,EAAGiF,MAAM2N,KACnEnO,EAAKsO,WAAW5H,MAAQtE,EAAU7G,EAAGiF,MAAMwK,QAAQ,UAAYzP,EAAGiF,MAAM2N,KACxEnO,EAAKuO,SAAS7H,MAAQtE,EAAU7G,EAAGiF,MAAMwK,QAAQ,UAAYzP,EAAGiF,MAAM2N,MAE1EnO,EAAAoE,kBAAoB,SAACZ,EAAWC,EAAWY,KA9GvCrE,EAAKkB,KAAOgI,EACZlJ,EAAKoB,MAAQA,EACbpB,EAAK+J,MAAQ,IAAIxO,EAAGyO,MAChB,kBACAd,EAAOe,iBAAiBC,MAAQ,EAChChB,EAAOe,iBAAiBiD,OAAS,GAGrClN,EAAK+J,MAAMM,WAAa,mBACxBrK,EAAK+J,MAAMO,SAAW,GACtBtK,EAAK+J,MAAMrD,MAAQnL,EAAGiF,MAAMwK,QAAQ,UACpChL,EAAK+J,MAAMS,UAAYjP,EAAGkP,UAAUC,OACpC1K,EAAK+J,MAAMK,QAAU,EAErBpK,EAAKoO,OAAS,IAAI7S,EAAGyO,MACjB,WACAd,EAAOe,iBAAiBC,MAAQ,EAChChB,EAAOe,iBAAiBiD,OAAS,EAAI,IAGzClN,EAAKoO,OAAO/D,WAAa,mBACzBrK,EAAKoO,OAAO9D,SAAW,GACvBtK,EAAKoO,OAAO1H,MAAQnL,EAAGiF,MAAMwK,QAAQ,UACrChL,EAAKoO,OAAO5D,UAAYjP,EAAGkP,UAAUC,OACrC1K,EAAKoO,OAAOhE,QAAU,EAEtBpK,EAAKsO,WAAa,IAAI/S,EAAGyO,MACrB,cACAd,EAAOe,iBAAiBC,MAAQ,EAChChB,EAAOe,iBAAiBiD,OAAS,GAGrClN,EAAKsO,WAAWjE,WAAa,mBAC7BrK,EAAKsO,WAAWhE,SAAW,GAC3BtK,EAAKsO,WAAW5H,MAAQnL,EAAGiF,MAAMwK,QAAQ,UACzChL,EAAKsO,WAAW9D,UAAYjP,EAAGkP,UAAUC,OACzC1K,EAAKsO,WAAWlE,QAAU,EAE1BpK,EAAKqO,MAAQ,IAAI9S,EAAGyO,MAChBhK,EAAKoB,MAAMoN,KACXtF,EAAOe,iBAAiBC,MAAQ,EAChChB,EAAOe,iBAAiBiD,OAAS,EAAI,IAGzClN,EAAKqO,MAAMhE,WAAa,mBACxBrK,EAAKqO,MAAM/D,SAAW,GACtBtK,EAAKqO,MAAM3H,MAAQnL,EAAGiF,MAAMwK,QAAQ,UACpChL,EAAKqO,MAAM7D,UAAYjP,EAAGkP,UAAUC,OACpC1K,EAAKqO,MAAMjE,QAAU,EAErBpK,EAAKuO,SAAW,IAAIhT,EAAGyO,MACnB,4BACAd,EAAOe,iBAAiBC,MAAQ,EAChChB,EAAOe,iBAAiBiD,OAAS,IAGrClN,EAAKuO,SAASlE,WAAa,mBAC3BrK,EAAKuO,SAASjE,SAAW,GACzBtK,EAAKuO,SAAS7H,MAAQnL,EAAGiF,MAAMwK,QAAQ,UACvChL,EAAKuO,SAAS/D,UAAYjP,EAAGkP,UAAUC,OACvC1K,EAAKuO,SAASnE,QAAU,EAExBpK,EAAK+J,MAAM5B,QACNC,WAAW,WACRpI,EAAKoO,OAAOjG,QACPwC,KAAK,EAAG,OAEhBA,KAAK,EAAG,KACRvC,WAAW,WACRpI,EAAKoO,OAAOjG,QACPsG,QAAQ,IAAK,IAAK,GAAK,MAE/BA,QAAQ,IAAK,IAAK,GAAK,IACvBrG,WAAW,WACRpI,EAAKoO,OAAOjG,QACPE,OAAOrI,EAAKoO,OAAO5K,EAAGxD,EAAKoO,OAAO3K,EAAI,IAAK,OAEnD4E,OAAOrI,EAAK+J,MAAMvG,EAAGxD,EAAK+J,MAAMtG,EAAI,IAAK,KACzC2E,WAAW,WACRpI,EAAKsO,WAAWnG,QACXwC,KAAK,EAAG,KACRvC,WAAW,WACRpI,EAAKqO,MAAMlG,QACNwC,KAAK,EAAG,KACRrC,MAAM,KACNF,WAAW,WACRpI,EAAKkB,KAAKP,kBACVX,EAAKuO,SAASpG,QACTwC,KAAK,EAAG,WAMrC3K,EAAK+G,IAAI+B,EAAA8B,SAAS1B,IAClBlJ,EAAK+G,IAAI/G,EAAK+J,OACd/J,EAAK+G,IAAI/G,EAAKoO,QACdpO,EAAK+G,IAAI/G,EAAKqO,OACdrO,EAAK+G,IAAI/G,EAAKsO,YACdtO,EAAK+G,IAAI/G,EAAKuO,YAYtB,OAlI+BzN,EAAAmB,EAAAlC,GACpBkC,EAAAxJ,UAAAoS,aAAP,SAAoB3B,KACbjH,EAAAxJ,UAAAyL,WAAP,WACIjE,KAAKmB,MAAMsN,WACXzO,KAAKoO,MAAMG,KAAOvO,KAAKmB,MAAMuN,UAC7B1O,KAAKiB,KAAKN,mBAEPqB,EAAAxJ,UAAAqS,aAAP,aA2HJ7I,EAlIA,CAA+B1G,EAAG4P,OAArBvR,EAAAqI,6YCbb,IAAA1G,EAAA/B,EAAA,IACA8N,EAAA9N,EAAA,IAIA+H,EAAA,SAAAxB,GAEI,SAAAwB,EAAY2H,GAAZ,IAAAlJ,EACID,EAAApH,KAAAsH,KAAM,cAAeiJ,EAAOe,iBAAiBC,MAAQ,IAAK,MAAIjK,YAuBlED,EAAA4O,UAAY,aArBR5O,EAAKqK,WAAa,mBAClBrK,EAAK0G,MAAQnL,EAAGiF,MAAMqO,MACtB7O,EAAKsK,SAAW,GAChBtK,EAAKwK,UAAYjP,EAAGkP,UAAUqE,MAC9B9O,EAAKoK,QAAU,EAEfpK,EAAK+O,WAELzH,EAAA1H,aAAa8C,GAAG,cAAe,WACvB1C,EAAK+O,UAET/O,EAAK+O,WACL/O,EAAKmI,QACAwC,KAAK,EAAG,KACRrC,MAAM,KACNqC,KAAK,EAAG,KACRhC,YACA5D,KAAK,SAAAd,GAAK,OAAAjE,EAAK+O,gBAAU3U,EAO1C,OA7B+B0G,EAAAS,EAAAxB,GA6B/BwB,EA7BA,CAA+BhG,EAAGyO,OAArBpQ,EAAA2H,6YCLb,IAAAhG,EAAA/B,EAAA,IAqBA,SAAAwV,EAAkBC,GACd,IAAMC,EAAiB,IAAXD,EACNE,EAAeD,EAAM,IAAO,IAC5BE,EAAUF,EAAM,IAAO,GACvBG,EAAUH,EAAM,IAAc,GAKpC,OAHWG,EAAU,GAAM,IAAMA,EAAQC,QAAQ,GAAKD,EAAQC,QAAQ,IAG3D,KAFAF,EAAU,GAAM,IAAMA,EAAQE,QAAQ,GAAKF,EAAQE,QAAQ,IAEjD,IAAMH,EA1BlBvV,EAAA2V,YAAc,WACvB,IAAIC,EAAO,EACLzF,EAAQ,IAAIxO,EAAGyO,MAAMwF,EAAKC,WAAY,IAAK,KAYjD,OAXA1F,EAAMM,WAAa,mBACnBN,EAAMrD,MAAQnL,EAAGiF,MAAMqO,MACvB9E,EAAMS,UAAYjP,EAAGkP,UAAUqE,MAE/BY,YAAY,SAAAzL,GACRuL,IACAzF,EAAMyE,KAAOQ,EAASQ,IACvB,MAIMzF,MAAKA,EAAE4F,UAFE,WAAM,OAAAH,EAAO,KAiBnC,IAAAnO,EAAA,SAAAtB,GAGI,SAAAsB,EAAY6H,GAAZ,IAAAlJ,EACID,EAAApH,KAAAsH,KAAM,OAAQiJ,EAAOe,iBAAiBC,MAAQ,IAAK,MAAIjK,YAc3DD,EAAA+C,QAAU,SAACyM,GACPxP,EAAKwP,KAAOA,EACZxP,EAAKwO,KAAOQ,EAAShP,EAAKwP,OAG9BxP,EAAA2O,QAAU,WACN,OAAOK,EAAShP,EAAKwP,OAGzBxP,EAAA0O,SAAW,WACPxT,OAAO0U,cAAc5P,EAAK6P,WAvB1B7P,EAAKwP,KAAO,EAEZxP,EAAKqK,WAAa,mBAClBrK,EAAK0G,MAAQnL,EAAGiF,MAAMqO,MACtB7O,EAAKwK,UAAYjP,EAAGkP,UAAUqE,MAE9B9O,EAAK6P,SAAW3U,OAAOwU,YAAY,SAAAzL,GAC/BjE,EAAKwP,OACLxP,EAAKwO,KAAOQ,EAAShP,EAAKwP,OAC3B,KAAApV,EAgBX,OA9B+B0G,EAAAO,EAAAtB,GA8B/BsB,EA9BA,CAA+B9F,EAAGyO,OAArBpQ,EAAAyH,6YCjCb,IAAA9F,EAAA/B,EAAA,IAIA2F,EAAA3F,EAAA,IAKAsP,EAAAtP,EAAA,IAEAoI,EAAA,SAAA7B,GAKI,SAAA6B,EAAYsH,GAAZ,IAAAlJ,EACID,EAAApH,KAAAsH,OAAOA,KAED8J,EAAQ,IAAIxO,EAAGyO,MACjB,kBACAd,EAAOe,iBAAiBC,MAAQ,EAChChB,EAAOe,iBAAiBE,IAAM,KAGlCJ,EAAMM,WAAa,mBACnBN,EAAMO,SAAW,GACjBP,EAAMrD,MAAQnL,EAAGiF,MAAM2N,KACvBpE,EAAMS,UAAYjP,EAAGkP,UAAUC,OAE/BX,EAAM5B,QACDsG,QAAQ,IAAK,IAAK,IAAK,KACvBA,QAAQ,EAAG,EAAG,IAAK,KACnBlG,gBAEL,IAAMuH,EAAY,IAAIvU,EAAGyO,MACrB,gCACAd,EAAOe,iBAAiBC,MAAQ,EAChChB,EAAOe,iBAAiBiD,OAAS,IAGrC4C,EAAUzF,WAAa,mBACvByF,EAAUxF,SAAW,GACrBwF,EAAUpJ,MAAQnL,EAAGiF,MAAMwK,QAAQ,UACnC8E,EAAUtF,UAAYjP,EAAGkP,UAAUC,OAEnC,IAAMoC,EAAK5D,EAAOe,iBACZ+C,EAASF,EAAG5C,MAAQ,KACpB+C,EAASH,EAAGI,OAAS,KACrB5O,EAAW,IAAI/C,EAAG8L,MACpB6B,EAAOe,iBAAiBC,MAAQ,EAChChB,EAAOe,iBAAiBiD,OAAS,GAE/B6C,EAAU5Q,EAAAX,UAAUM,SAAS8G,kBACnCmK,EAAQvM,EAAIuM,EAAQ5C,UAAY,EAChC4C,EAAQtM,EAAIsM,EAAQ3C,WAAa,EAIjC9O,EAASkF,EAAIsJ,EAAG5C,MAAQ,EACxB5L,EAASmF,EAAIqJ,EAAGI,OAAS,EACzB5O,EAAS+O,MAAQ,IAAI9R,EAAGuM,OAAOkF,EAASC,EAASD,EAASC,EAAQD,EAASC,EAASD,EAASC,GAC7F3O,EAASwI,WAAWiJ,GAgBpB/P,EAAK+G,IAAI+B,EAAA8B,SAAS1B,IAClBlJ,EAAK+G,IAAIgD,GACT/J,EAAK+G,IAAI+I,GACT9P,EAAK+G,IAAIzI,KAEjB,OAxE0BwC,EAAAc,EAAA7B,GACf6B,EAAAnJ,UAAAoS,aAAP,SAAoB3B,KACbtH,EAAAnJ,UAAAyL,WAAP,aACOtC,EAAAnJ,UAAAqS,aAAP,aAqEJlJ,EAxEA,CAA0BrG,EAAG4P,OAAhBvR,EAAAgI,wYCTb,IAAA2F,EAAA/N,EAAA,IACAwW,EAAAxW,EAAA,IAEA8F,EAAA9F,EAAA,IACA+F,EAAA/F,EAAA,IAGAyW,EAAAzW,EAAA,IACA0W,EAAA1W,EAAA,IACA2W,EAAA3W,EAAA,IACAgM,EAAAhM,EAAA,IACAmG,EAAAnG,EAAA,IACA4W,EAAA5W,EAAA,IAKE6W,EAAA/Q,EAAArC,iBAAAvB,QACA4U,EAAAhR,EAAArC,iBAAAtB,WACA4U,EAAAjR,EAAArC,iBAAArB,SACA4U,EAAAlR,EAAArC,iBAAApB,YAEA4U,EAAAnR,EAAArC,iBAAAnB,QAEA4U,GADApR,EAAArC,iBAAAlB,QACAuD,EAAArC,iBAAAjB,UACA2U,EAAArR,EAAArC,iBAAAhB,OAEA2U,EAAAtR,EAAArC,iBAAAd,UACA0U,EAAAvR,EAAArC,iBAAAf,QAGA4U,GADAxR,EAAArC,iBAAAb,MACAkD,EAAArC,iBAAAZ,MACA0U,EAAAzR,EAAArC,iBAAAX,MACA0U,EAAA1R,EAAArC,iBAAAV,OACA0U,EAAA3R,EAAArC,iBAAAT,MAIA0U,EAAA3R,EAAAhC,cAAA7B,QACAyV,EAAA5R,EAAAhC,cAAA5B,WACAyV,EAAA7R,EAAAhC,cAAA3B,SACAyV,EAAA9R,EAAAhC,cAAA1B,YAEAyV,EAAA/R,EAAAhC,cAAAzB,QACAyV,EAAAhS,EAAAhC,cAAAxB,QACAyV,EAAAjS,EAAAhC,cAAAvB,SAGAyV,GAFAlS,EAAAhC,cAAAtB,OAEAsD,EAAAhC,cAAApB,WACAuV,EAAAnS,EAAAhC,cAAArB,QAGAyV,GADApS,EAAAhC,cAAAnB,MACAmD,EAAAhC,cAAAlB,MACAuV,EAAArS,EAAAhC,cAAAjB,MAKIuV,IACHxB,EAAKO,EAAKA,EAAKA,EAAKA,EAAKA,EAAKA,EAAKA,EAAKA,EAAKA,EAAKA,EAAKG,EAAKH,EAAKL,IACjEM,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAKA,IACjEG,EAAKJ,EAAKL,EAAK,IAAKF,EAAKO,EAAK,IAAKA,EAAKA,EAAKG,EAAKA,EAAKP,EAAK,IAAKK,IACjEA,EAAK,IAAKA,EAAK,IAAKA,EAAK,IAAK,IAAK,IAAK,IAAKA,EAAKA,EAAK,IAAK,IAAKA,IACjEA,EAAK,IAAKP,EAAKM,EAAKJ,EAAK,IAAK,IAAK,IAAK,IAAKK,EAAKA,EAAK,IAAK,IAAKA,IACjEA,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAKA,EAAKA,EAAK,IAAK,IAAKA,IACjEA,EAAK,IAAK,IAAKF,EAAK,IAAK,IAAK,IAAK,IAAKN,EAAKS,EAAKA,EAAKF,EAAK,IAAKK,IACjED,EAAKN,EAAK,IAAKJ,EAAKM,EAAKA,EAAKA,EAAKA,EAAKK,EAAK,IAAK,IAAK,IAAK,IAAKJ,IACjEA,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAKA,EAAK,IAAK,IAAK,IAAK,IAAKA,IACjEA,EAAK,IAAKJ,EAAKM,EAAKH,EAAKL,EAAK,IAAK,IAAKS,EAAKJ,EAAKF,EAAK,IAAK,IAAKG,IACjEA,EAAK,IAAK,IAAKA,EAAK,IAAKA,EAAK,IAAK,IAAKA,EAAK,IAAK,IAAK,IAAK,IAAKA,IACjEG,EAAKN,EAAK,IAAKG,EAAK,IAAKP,EAAKI,EAAK,IAAKJ,EAAKM,EAAKL,EAAK,IAAK,IAAKM,IACjEA,EAAK,IAAK,IAAKA,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAKA,EAAK,IAAK,IAAKA,IACjEP,EAAKM,EAAKA,EAAKE,EAAKF,EAAKA,EAAKA,EAAKA,EAAKA,EAAKA,EAAKE,EAAKF,EAAKA,EAAKJ,IAG9DsB,IACHZ,EAAKO,EAAKG,EAAKH,EAAKG,EAAKH,EAAKA,EAAKA,EAAKG,EAAKH,EAAKA,EAAKA,EAAKA,EAAKL,IACjEM,EAAK,IAAKP,EAAKM,EAAKJ,EAAK,IAAK,IAAK,IAAKE,EAAK,IAAK,IAAK,IAAK,IAAKG,IACjEA,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAKA,IAxBlEnS,EAAAhC,cAAAhB,OAyBMiV,EAAK,IAAKN,EAAKO,EAAKG,EAAKH,EAAKA,EAAKA,EAAKL,EAAK,IAAK,IAAK,IAAKM,IACjEA,EAAK,IAAK,IAAKA,EAAK,IAAK,IAAK,IAAK,IAAK,IAAKA,EAAK,IAAK,IAAK,IAAKA,IACjEA,EAAK,IAAKR,EAAKS,EAAKF,EAAKE,EAAKF,EAAKL,EAAK,IAAKM,EAAK,IAAK,IAAK,IAAKA,IACjEA,EAAK,IAAKA,EAAK,IAAK,IAAK,IAAK,IAAKA,EAAK,IAAKA,EAAK,IAAK,IAAK,IAAKA,IACjEA,EAAK,IAAKP,EAAKM,EAAKA,EAAKD,EAAK,IAAKL,EAAK,IA5BzC5R,EAAAhC,cAAAf,MA4BmD,IAAK,IAAK,IAAKkV,IACjEA,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAKA,EAAK,IAAK,IAAK,IAAKA,IACjEA,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAKA,EAAK,IAAK,IAAK,IAAKA,IACjEA,EAAK,IAAKJ,EAAKE,EAAK,IAAK,IAAK,IAAK,IAAK,IAAKE,EAAK,IAAK,IAAK,IAAKA,IACjEA,EAAK,IAAK,IAAK,IAAK,IAAKR,EAAKO,EAAKD,EAAK,IAAKL,EAAKM,EAAKL,EAAK,IAAKM,IACjEA,EAAK,IAAK,IAAK,IAAK,IAAKA,EAAK,IAAK,IAAK,IAAK,IAAK,IAAKA,EAAK,IAAKA,IACjEP,EAAKM,EAAKA,EAAKA,EAAKA,EAAKE,EAAKF,EAAKA,EAAKA,EAAKA,EAAKA,EAAKE,EAAKF,EAAKJ,IAGpErP,EAAA,SAAAjC,GAqBE,SAAAiC,EAAYR,EAAiBE,EAAiBwH,EAAc9H,EAAiBE,GAA7E,IAAAtB,EAAAC,KACQ8R,EAAUxG,KAAKyG,MAAM9I,EAAOe,iBAAiBC,MAAQ,EAAI,GAAK2H,EAAK,GAAGxZ,OAAS,EAAI,IACnF4Z,EAAU1G,KAAKyG,MAAM9I,EAAOe,iBAAiBiD,OAAS,EAAI,GAAK2E,EAAKxZ,OAAS,EAAI,IACjF6Z,EAAYlC,EAAA/D,YAAY8F,EAASE,EAASJ,MAC1CM,EAAYnC,EAAA/D,YAAY8F,EAASE,EAASH,MAiC1CM,IA9BFvE,QAAUrK,EAAG,EAAGC,EAAG,IACnBiK,QAAUlK,EAAG,EAAGC,EAAG,MA6B2BkK,IAAI,SAAA0E,GAAqB,OAAAnC,EAAA5C,kBACzEyE,EACAE,EACAI,EAAkBxE,OAClBwE,EAAkB3E,MAAM,OACxB,KACI4E,EAAmBF,EAAsBzE,IAAI,SAAA4E,GAAQ,OAAAA,EAAK1E,SAC1D2E,EAAiBJ,EAAsBzE,IAAI,SAAA4E,GAAQ,OAAAA,EAAK7E,QAExD+E,IAhCF5E,QAAUrK,EAAG,EAAGC,EAAG,GACnBiK,QAAUlK,EAAG,EAAGC,EAAG,MA+B8BkK,IAAI,SAAA0E,GAAqB,OAAAnC,EAAA5C,kBAC5EyE,EACAE,EACAI,EAAkBxE,OAClBwE,EAAkB3E,MAAM,OACxB,KACIgF,EAAqBD,EAAwB9E,IAAI,SAAA4E,GAAQ,OAAAA,EAAK1E,SAC9D8E,EAAmBF,EAAwB9E,IAAI,SAAA4E,GAAQ,OAAAA,EAAK7E,QAE5DkF,IAlCF/E,QAAUrK,EAAG,EAAGC,EAAG,GACnBiK,QAAUlK,EAAG,EAAGC,EAAG,MAGnBoK,QAAUrK,EAAG,EAAGC,EAAG,IACnBiK,QAAUlK,EAAG,GAAIC,EAAG,MA6B4BkK,IAAI,SAAA0E,GAAqB,OAAAnC,EAAA5C,kBAC3EyE,EACAE,EACAI,EAAkBxE,OAClBwE,EAAkB3E,MAAM,OACxB,KACImF,EAAqBD,EAAwBjF,IAAI,SAAA4E,GAAQ,OAAAA,EAAK1E,SAC9DiF,EAAmBF,EAAwBjF,IAAI,SAAA4E,GAAQ,OAAAA,EAAK7E,QAE5DqF,IAhCFlF,QAAUrK,EAAG,EAAGC,EAAG,GACnBiK,QAAUlK,EAAG,GAAIC,EAAG,MA+B2BkK,IAAI,SAAA0E,GAAqB,OAAAnC,EAAA5C,kBAC1EyE,EACAE,EACAI,EAAkBxE,OAClBwE,EAAkB3E,MAAM,OACxB,KACIsF,EAAmBD,EAAsBpF,IAAI,SAAA4E,GAAQ,OAAAA,EAAK1E,SAC1DoF,EAAiBF,EAAsBpF,IAAI,SAAA4E,GAAQ,OAAAA,EAAK7E,QAGxDrP,EAAS,IAAI4R,EAAArR,OAAOmT,EAASE,EAAS,GAAI,GAAIzQ,EAASE,GAEvDwR,EAAO,IAAIvT,EAAA+H,OAAOqK,EAASE,EAAS,EAAG,OAC7CiB,EAAKjL,QAAQ,IAAImI,EAAAtI,OAAO,EAAG,IAAK,KAChC,IAAMqL,EAAO,IAAIxT,EAAA+H,OAAOqK,EAASE,EAAS,EAAG,MAC7CkB,EAAKlL,QAAQ,IAAImI,EAAAtI,OAAO,GAAI,GAAI,KAChC,IAAMsL,EAAO,IAAIzT,EAAA+H,OAAOqK,EAASE,EAAS,GAAI,MAC9CmB,EAAKnL,QAAQ,IAAImI,EAAAtI,OAAO,GAAI,GAAI,KAChC,IAAMuL,EAAO,IAAI1T,EAAA+H,OAAOqK,EAASE,EAAS,GAAI,MAC9CoB,EAAKpL,QAAQ,IAAImI,EAAAtI,OAAO,GAAI,GAAI,KAChC,IAAMwL,EAAO,IAAI3T,EAAA+H,OAAOqK,EAASE,EAAS,GAAI,MAC9CqB,EAAKrL,QAAQ,IAAImI,EAAAtI,OAAO,GAAI,GAAI,KAEhC,IAAMkB,GAAY1H,EAAWF,GAAKmS,OAAKrB,EAAcI,EAAqBI,EAAuBvC,EAAAqD,QAAQV,GAAsB3C,EAAAqD,QAAQP,IAAiBC,EAAMC,EAAM9U,IAC9J4K,GAAY3H,EAAWF,GAAKmS,OAAKpB,EAAcU,EAAuBG,EAAqB7C,EAAAqD,QAAQhB,GAAoBrC,EAAAqD,QAAQb,IAAmBS,EAAMC,EAAMC,EAAMjV,WAE1K2B,EAAAD,EAAApH,KAAAsH,KAAMuB,EAASE,EAASsH,EAAUC,EAAUC,IAAOjJ,MAE9C8G,IAAIvB,EAAA7H,YAETqC,EAAKkT,KAAOA,EACZlT,EAAKmT,KAAOA,EACZnT,EAAKoT,KAAOA,EACZpT,EAAKqT,KAAOA,EACZrT,EAAKsT,KAAOA,IAKhB,OA5HgCxS,EAAAkB,EAAAjC,GAMvBiC,EAAAvJ,UAAAoS,aAAP,SAAoB3B,KACblH,EAAAvJ,UAAAyL,WAAP,WACE,IAAM6N,EAAUxG,KAAKyG,MAAM/R,KAAKiJ,OAAOe,iBAAiBC,MAAQ,EAAI,GAAK2H,EAAK,GAAGxZ,OAAS,EAAI,IACxF4Z,EAAU1G,KAAKyG,MAAM/R,KAAKiJ,OAAOe,iBAAiBiD,OAAS,EAAI,GAAK2E,EAAKxZ,OAAS,EAAI,IAC5F4H,KAAKkJ,WAAW4I,EAASE,EAAS,EAAG,GAAI,EAAG,GAC5ChS,KAAKiB,KAAKP,kBACVV,KAAKiT,KAAK/M,OAAO4L,EAASE,EAAS,EAAG,GAAI,IAAI7B,EAAAtI,OAAO,EAAG,KACxD7H,KAAKkT,KAAKhN,OAAO4L,EAASE,EAAS,EAAG,EAAG,IAAI7B,EAAAtI,OAAO,GAAI,IACxD7H,KAAKmT,KAAKjN,OAAO4L,EAASE,EAAS,GAAI,EAAG,IAAI7B,EAAAtI,OAAO,GAAI,IACzD7H,KAAKmT,KAAKjN,OAAO4L,EAASE,EAAS,GAAI,EAAG,IAAI7B,EAAAtI,OAAO,GAAI,IACzD7H,KAAKmT,KAAKjN,OAAO4L,EAASE,EAAS,GAAI,EAAG,IAAI7B,EAAAtI,OAAO,GAAI,IACzD7H,KAAK2J,gBAAgB,IAEhB5H,EAAAvJ,UAAAqS,aAAP,WAAwB7K,KAAKiB,KAAKP,mBAyGpCqB,EA5HA,CAAgCuF,EAAAwB,OAAnBnP,EAAAoI,gZC5Fb,IAAAuF,EAAA/N,EAAA,IACAwW,EAAAxW,EAAA,IAEA8F,EAAA9F,EAAA,IACA+F,EAAA/F,EAAA,IAGAyW,EAAAzW,EAAA,IACA0W,EAAA1W,EAAA,IACA2W,EAAA3W,EAAA,IACAgM,EAAAhM,EAAA,IAOE6W,EAAA/Q,EAAArC,iBAAAvB,QACA4U,EAAAhR,EAAArC,iBAAAtB,WACA4U,EAAAjR,EAAArC,iBAAArB,SACA4U,EAAAlR,EAAArC,iBAAApB,YAEA4U,EAAAnR,EAAArC,iBAAAnB,QACA2X,EAAAnU,EAAArC,iBAAAlB,QACA2U,EAAApR,EAAArC,iBAAAjB,SAGA4U,GAFAtR,EAAArC,iBAAAhB,OAEAqD,EAAArC,iBAAAd,WACA0U,EAAAvR,EAAArC,iBAAAf,QAEAwX,EAAApU,EAAArC,iBAAAb,MAEA2U,GADAzR,EAAArC,iBAAAZ,KACAiD,EAAArC,iBAAAX,OACA0U,EAAA1R,EAAArC,iBAAAV,OACA0U,EAAA3R,EAAArC,iBAAAT,MAIA0U,EAAA3R,EAAAhC,cAAA7B,QACAyV,EAAA5R,EAAAhC,cAAA5B,WACAyV,EAAA7R,EAAAhC,cAAA3B,SACAyV,EAAA9R,EAAAhC,cAAA1B,YAEAyV,EAAA/R,EAAAhC,cAAAzB,QACAyV,EAAAhS,EAAAhC,cAAAxB,QACAyV,EAAAjS,EAAAhC,cAAAvB,SACA2X,EAAApU,EAAAhC,cAAAtB,OAEAwV,EAAAlS,EAAAhC,cAAApB,UACAuV,EAAAnS,EAAAhC,cAAArB,QAGAyV,GADApS,EAAAhC,cAAAnB,MACAmD,EAAAhC,cAAAlB,MAEAuX,GADArU,EAAAhC,cAAAjB,MACAiD,EAAAhC,cAAAhB,QACAsX,EAAAtU,EAAAhC,cAAAf,MAGIqV,IACHxB,EAAKO,EAAKA,EAAKA,EAAKA,EAAKA,EAAKA,EAAKA,EAAKA,EAAKA,EAAKG,EAAKR,IACvDM,EAAKR,EAAKO,EAAKA,EAAKA,EAAKA,EAAKA,EAAKA,EAAKA,EAAKA,EAAKJ,EAAKK,IACvDA,EAAKA,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAKA,IACvDA,EAAKG,EAAK,IAAKJ,EAAKA,EAAKA,EAAKA,EAAKG,EAAKH,EAAKF,EAAK,IAAKG,IACvDA,EAAKA,EAAK,IAAK,IAAK,IAAK,IAAK,IAAKA,EAAK,IAAK,IAAK,IAAKA,IACvDA,EAAKP,EAAKS,EAAKH,EAAKG,EAAKH,EAAKA,EAAKK,EAAK,IAAKR,EAAKG,EAAKK,IACvDD,EAAKJ,EAAK8C,EAAK9C,EAAKK,EAAK,IAAK,IAAKJ,EAAK,IAAK,IAAK,IAAKA,IACvDA,EAAK,IAAKA,EAAK,IAAKG,EAAKN,EAAK,IAAKJ,EAAKM,EAAKF,EAAK,IAAKG,IACvDA,EAAK,IAAKA,EAAK,IAAKA,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAKA,IACvDA,EAAK,IAAK4C,EAAK,IAAKA,EAAK,IAAKhD,EAAKG,EAAKA,EAAKA,EAAKA,EAAKK,IACvDJ,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAKA,IACvDP,EAAKM,EAAKA,EAAKA,EAAKA,EAAKA,EAAKA,EAAKA,EAAKA,EAAKA,EAAKA,EAAKJ,IAGpDsB,IACHZ,EAAKO,EAAKA,EAAKA,EAAKA,EAAKA,EAAKA,EAAKA,EAAKA,EAAKA,EAAKA,EAAKL,IACvDM,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAKA,IACvDkC,EAAKnC,EAAKA,EAAKA,EAAKL,EAAK,IAAKF,EAAKO,EAAKA,EAAKA,EAAKA,EAAKoC,IACvDnC,EAAK,IAAK,IAAK,IAAKA,EAAK,IAAKA,EAAK,IAAK,IAAK,IAAK,IAAKA,IACvDA,EAAK,IAAKiC,EAAK,IAAKjC,EAAK,IAAKH,EAAK,IAAKL,EAAKM,EAAK,IAAKE,IACvDA,EAAK,IAAKA,EAAK,IAAKA,EAAK,IAAK,IAAK,IAAKA,EAAK,IAAK,IAAKA,IACvDkC,EAAK,IAAKC,EAAK,IAAKD,EAAKnC,EAAKA,EAAKA,EAAKE,EAAKH,EAAK,IAAKE,IACvDA,EAAK,IAAKA,EAAK,IAAKA,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAKA,IACvDkC,EAAKnC,EAAKJ,EAAK,IAAKuC,EAAKpC,EAAK,IAAKF,EAAKG,EAAKD,EAAK,IAAKE,IACvDA,EAAK,IAAK,IAAK,IAAKH,EAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAKG,IACvDA,EAAK,IAAKiC,EAAK,IAAK,IAAK,IAAKA,EAAK,IAAKA,EAAK,IAAKzC,EAAK2C,IACvD1C,EAAKM,EAAKE,EAAKF,EAAKA,EAAKA,EAAKE,EAAKF,EAAKE,EAAKF,EAAKE,EAAKN,IAG1DtP,EAAA,SAAAhC,GAeE,SAAAgC,EAAYP,EAAiBE,EAAiBwH,EAAc9H,EAAiBE,GAA7E,IAAAtB,EACQ+R,EAAUxG,KAAKyG,MAAM9I,EAAOe,iBAAiBC,MAAQ,EAAI,GAAK2H,EAAK,GAAGxZ,OAAS,EAAI,IACnF4Z,EAAU1G,KAAKyG,MAAM9I,EAAOe,iBAAiBiD,OAAS,EAAI,GAAK2E,EAAKxZ,OAAS,EAAI,IACjF6Z,EAAYlC,EAAA/D,YAAY8F,EAASE,EAASJ,MAC1CM,EAAYnC,EAAA/D,YAAY8F,EAASE,EAASH,MAe1CgC,IAZFjG,QAAUrK,EAAG,EAAGC,EAAG,GACnBiK,QAAUlK,EAAG,EAAGC,EAAG,MAWmBkK,IAAI,SAAA0E,GAAqB,OAAAnC,EAAA5C,kBACjEyE,EACAE,EACAI,EAAkBxE,OAClBwE,EAAkB3E,MAAM,OACxB,KACIqG,EAAWD,EAAcnG,IAAI,SAAA4E,GAAQ,OAAAA,EAAK1E,SAC1CmG,EAASF,EAAcnG,IAAI,SAAA4E,GAAQ,OAAAA,EAAK7E,QAExCuG,IAdFpG,QAAUrK,EAAG,EAAGC,EAAG,GACnBiK,QAAUlK,EAAG,EAAGC,EAAG,MAamBkK,IAAI,SAAA0E,GAAqB,OAAAnC,EAAA5C,kBACjEyE,EACAE,EACAI,EAAkBxE,OAClBwE,EAAkB3E,MAAM,OACxB,KACIwG,EAAWD,EAActG,IAAI,SAAA4E,GAAQ,OAAAA,EAAK1E,SAC1CsG,EAASF,EAActG,IAAI,SAAA4E,GAAQ,OAAAA,EAAK7E,QAGxCrP,EAAS,IAAI4R,EAAArR,OAAOmT,EAASE,EAAS,EAAG,EAAGzQ,EAASE,GAQrDsH,GAAY1H,EAAWF,GAAKmS,OAAKrB,EAAc6B,EAAa5D,EAAAqD,QAAQW,IAAoB,CAAE9V,IAC1F4K,GAAY3H,EAAWF,GAAKmS,OAAKpB,EAAc+B,EAAa/D,EAAAqD,QAAQQ,IAAmB,CAAE3V,WAE/F2B,EAAAD,EAAApH,KAAAsH,KAAMuB,EAASE,EAASsH,EAAUC,EAAUC,IAAOjJ,MAE9C8G,IAAIvB,EAAA7H,cAMb,OAxE8BmD,EAAAiB,EAAAhC,GAGrBgC,EAAAtJ,UAAAoS,aAAP,SAAoB3B,KACbnH,EAAAtJ,UAAAyL,WAAP,WACE,IAAM6N,EAAUxG,KAAKyG,MAAM/R,KAAKiJ,OAAOe,iBAAiBC,MAAQ,EAAI,GAAK2H,EAAK,GAAGxZ,OAAS,EAAI,IACxF4Z,EAAU1G,KAAKyG,MAAM/R,KAAKiJ,OAAOe,iBAAiBiD,OAAS,EAAI,GAAK2E,EAAKxZ,OAAS,EAAI,IAC5F4H,KAAKkJ,WAAW4I,EAASE,EAAS,EAAG,EAAG,EAAG,GAC3ChS,KAAKiB,KAAKP,kBACVV,KAAK2J,gBAAgB,IAIhB7H,EAAAtJ,UAAAqS,aAAP,WAAwB7K,KAAKiB,KAAKP,mBA2DpCoB,EAxEA,CAA8BwF,EAAAwB,OAAjBnP,EAAAmI,0FC1Fb,IAAAxG,EAAA/B,EAAA,IAEM4a,EAAU,IAAI7Y,EAAG8Y,gBAAgB,EAAG,EAAG,EAAG,GAChDD,EAAQE,YAAc/Y,EAAGgZ,YAAYC,OACrCJ,EAAQK,OAAS,EACjBL,EAAQM,OAAS,IACjBN,EAAQO,OAAS,IACjBP,EAAQQ,SAAW,EACnBR,EAAQS,SAAW,IACnBT,EAAQlJ,cACRkJ,EAAQU,SAAW,IACnBV,EAAQhK,QAAU,IAClBgK,EAAQW,YACRX,EAAQY,aAAe,IACvBZ,EAAQa,QAAU,GAClBb,EAAQc,QAAU,EAClBd,EAAQe,UAAY,GACpBf,EAAQgB,QAAU,EAClBhB,EAAQiB,aAAe,IAAI9Z,EAAGuM,OAAO,GAAI,IACzCsM,EAAQrJ,WAAaxP,EAAGiF,MAAM2N,KAC9BiG,EAAQnJ,SAAW1P,EAAGiF,MAAM8U,QAE5B1b,EAAAiB,QAAeuZ,iFCtBf,IAAA7Y,EAAA/B,EAAA,IAEM4a,EAAU,IAAI7Y,EAAG8Y,gBAAgB,GAAI,GAAI,EAAG,GAClDD,EAAQE,YAAc/Y,EAAGgZ,YAAYC,OACrCJ,EAAQK,OAAS,EACjBL,EAAQM,OAAS,EACjBN,EAAQO,OAAS,GACjBP,EAAQQ,SAAW,EACnBR,EAAQS,SAAW,IACnBT,EAAQU,SAAW,GACnBV,EAAQhK,QAAU,IAClBgK,EAAQW,YACRX,EAAQY,aAAe,IACvBZ,EAAQa,QAAU,EAClBb,EAAQc,QAAU,EAClBd,EAAQe,UAAY,EACpBf,EAAQgB,QAAU,EAClBhB,EAAQiB,aAAe,IAAI9Z,EAAGuM,OAAO,EAAG,GACxCsM,EAAQrJ,WAAaxP,EAAGiF,MAAMwK,QAAQ,UACtCoJ,EAAQnJ,SAAW1P,EAAGiF,MAAMwK,QAAQ,UACpCoJ,EAAQlJ,cAERtR,EAAAiB,QAAeuZ,iFCtBf,IAAA7Y,EAAA/B,EAAA,IAEM4a,EAAU,IAAI7Y,EAAG8Y,gBAAgB,GAAI,GAAI,EAAG,GAClDD,EAAQE,YAAc/Y,EAAGgZ,YAAYC,OACrCJ,EAAQK,OAAS,EACjBL,EAAQM,OAAS,EACjBN,EAAQO,OAAS,GACjBP,EAAQQ,SAAW,EACnBR,EAAQS,SAAW,IACnBT,EAAQU,SAAW,GACnBV,EAAQhK,QAAU,IAClBgK,EAAQW,YACRX,EAAQY,aAAe,IACvBZ,EAAQa,QAAU,EAClBb,EAAQc,QAAU,EAClBd,EAAQe,UAAY,EACpBf,EAAQgB,QAAU,EAClBhB,EAAQiB,aAAe,IAAI9Z,EAAGuM,OAAO,EAAG,GACxCsM,EAAQrJ,WAAaxP,EAAGiF,MAAMwK,QAAQ,UACtCoJ,EAAQnJ,SAAW1P,EAAGiF,MAAMwK,QAAQ,UACpCoJ,EAAQlJ,cAERtR,EAAAiB,QAAeuZ,iFCtBf,IAAA7Y,EAAA/B,EAAA,IAEM4a,EAAU,IAAI7Y,EAAG8Y,gBAAgB,EAAG,EAAG,KAAM,MACnDD,EAAQE,YAAc/Y,EAAGgZ,YAAYgB,UACrCnB,EAAQK,OAAS,IACjBL,EAAQM,OAAS,GACjBN,EAAQO,OAAS,EACjBP,EAAQQ,SAAW,EACnBR,EAAQS,SAAW,IACnBT,EAAQU,SAAW,EACnBV,EAAQhK,QAAU,GAClBgK,EAAQW,YACRX,EAAQY,aAAe,IACvBZ,EAAQa,QAAU,EAClBb,EAAQc,QAAU,EAClBd,EAAQe,UAAY,EACpBf,EAAQgB,QAAU,EAClBhB,EAAQiB,aAAe,IAAI9Z,EAAGuM,OAAO,GAAI,KACzCsM,EAAQrJ,WAAaxP,EAAGiF,MAAMqO,MAC9BuF,EAAQnJ,SAAW1P,EAAGiF,MAAMqO,MAC5BuF,EAAQlJ,cAERtR,EAAAiB,QAAeuZ,iFCtBf,IAAA7Y,EAAA/B,EAAA,IAEM4a,EAAU,IAAI7Y,EAAG8Y,gBAAgB,EAAG,EAAG,EAAG,GAChDD,EAAQE,YAAc/Y,EAAGgZ,YAAYgB,UACrCnB,EAAQK,OAAS,EACjBL,EAAQM,OAAS,GACjBN,EAAQO,OAAS,GACjBP,EAAQQ,SAAW,EACnBR,EAAQS,SAAW,IACnBT,EAAQU,SAAW,GACnBV,EAAQhK,QAAU,GAClBgK,EAAQW,YACRX,EAAQY,aAAe,KACvBZ,EAAQa,QAAU,GAClBb,EAAQc,QAAU,EAClBd,EAAQe,UAAY,EACpBf,EAAQgB,QAAU,EAClBhB,EAAQiB,aAAe,IAAI9Z,EAAGuM,OAAO,EAAG,GACxCsM,EAAQrJ,WAAaxP,EAAGiF,MAAM2N,KAC9BiG,EAAQnJ,SAAW1P,EAAGiF,MAAM8U,QAC5BlB,EAAQlJ,cAERtR,EAAAiB,QAAeuZ,mBCtBfva,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAiBJ,EAAAwB,EAAuB,iDAAAgK,EAAAnE,EAAAzG,GCAxCP,EAAAD,QAAi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","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([44,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as ex from 'excalibur';\r\n\r\nconst copLeft = require('./images-retrowave/magenta/cop_1_left.png');\r\nconst copRight = require('./images-retrowave/magenta/cop_1_right.png');\r\n\r\nconst leftTop = require('./images-retrowave/magenta/wall1.png');\r\nconst leftBottom = require('./images-retrowave/magenta/wall2.png');\r\nconst rightTop = require('./images-retrowave/magenta/wall3.png');\r\nconst rightBottom = require('./images-retrowave/magenta/wall4.png');\r\n\r\nconst endLeft = require('./images-retrowave/magenta/wall5.png');\r\nconst endDown = require('./images-retrowave/magenta/wall6.png');\r\nconst endRight = require('./images-retrowave/magenta/wall7.png');\r\nconst endTop = require('./images-retrowave/magenta/wall8.png');\r\n\r\nconst topDown = require('./images-retrowave/magenta/wall10.png');\r\nconst leftRight = require('./images-retrowave/magenta/wall11.png');\r\n\r\nconst cross = require('./images-retrowave/magenta/wall12.png');\r\nconst tTop = require('./images-retrowave/magenta/wall13.png');\r\nconst tDown = require('./images-retrowave/magenta/wall14.png');\r\nconst tRight = require('./images-retrowave/magenta/wall15.png');\r\nconst tLeft = require('./images-retrowave/magenta/wall16.png');\r\n\r\nconst btn = require('./images-retrowave/magenta/button.png');\r\nconst btnPressed = require('./images-retrowave/magenta/button_pressed.png');\r\n\r\nconst dhc = require('./images-retrowave/magenta/door_3.png');\r\nconst dho = require('./images-retrowave/magenta/door_3_4_opened.png');\r\n\r\nconst dvc = require('./images-retrowave/magenta/door2.png');\r\nconst dvo = require('./images-retrowave/magenta/door1_2_opened.png');\r\n\r\nconst dogLeft = require('./images-retrowave/magenta/dog_left.png');\r\nconst dogRight = require('./images-retrowave/magenta/dog_right.png');\r\n\r\n\r\nlet MagentaResources = {\r\n    copLeft: new ex.Texture(copLeft),\r\n    copRight: new ex.Texture(copRight),\r\n\r\n    dogLeft: new ex.Texture(dogLeft),\r\n    dogRight: new ex.Texture(dogRight),\r\n\r\n    btn: new ex.Texture(btn),\r\n    btnPressed: new ex.Texture(btnPressed),\r\n\r\n    doorHorizontalClosed: new ex.Texture(dhc),\r\n    doorHorizontalOpen: new ex.Texture(dho),\r\n    doorVerticalClosed: new ex.Texture(dvc),\r\n    doorVerticalOpen: new ex.Texture(dvo),\r\n\r\n    leftTop: new ex.Texture(leftTop),\r\n    leftBottom: new ex.Texture(leftBottom),\r\n    rightTop: new ex.Texture(rightTop),\r\n    rightBottom: new ex.Texture(rightBottom),\r\n\r\n    endLeft: new ex.Texture(endLeft),\r\n    endDown: new ex.Texture(endDown),\r\n    endRight: new ex.Texture(endRight),\r\n    endTop: new ex.Texture(endTop),\r\n\r\n    topDown: new ex.Texture(topDown),\r\n    leftRight: new ex.Texture(leftRight),\r\n\r\n    cross: new ex.Texture(cross),\r\n    tTop: new ex.Texture(tTop),\r\n    tDown: new ex.Texture(tDown),\r\n    tRight: new ex.Texture(tRight),\r\n    tLeft: new ex.Texture(tLeft),\r\n}\r\n\r\nexport { MagentaResources }\r\n","import * as ex from 'excalibur';\r\n\r\nconst copLeft = require('./images-retrowave/cyan/cop_1_left.png');\r\nconst copRight = require('./images-retrowave/cyan/cop_1_right.png');\r\n\r\nconst leftTop = require('./images-retrowave/cyan/wall1.png');\r\nconst leftBottom = require('./images-retrowave/cyan/wall2.png');\r\nconst rightTop = require('./images-retrowave/cyan/wall3.png');\r\nconst rightBottom = require('./images-retrowave/cyan/wall4.png');\r\n\r\nconst endLeft = require('./images-retrowave/cyan/wall5.png');\r\nconst endDown = require('./images-retrowave/cyan/wall6.png');\r\nconst endRight = require('./images-retrowave/cyan/wall7.png');\r\nconst endTop = require('./images-retrowave/cyan/wall8.png');\r\n\r\nconst topDown = require('./images-retrowave/cyan/wall10.png');\r\nconst leftRight = require('./images-retrowave/cyan/wall11.png');\r\n\r\nconst cross = require('./images-retrowave/cyan/wall12.png');\r\nconst tTop = require('./images-retrowave/cyan/wall13.png');\r\nconst tDown = require('./images-retrowave/cyan/wall14.png');\r\nconst tRight = require('./images-retrowave/cyan/wall15.png');\r\nconst tLeft = require('./images-retrowave/cyan/wall16.png');\r\n\r\nconst btn = require('./images-retrowave/cyan/button.png');\r\nconst btnPressed = require('./images-retrowave/cyan/button_pressed.png');\r\n\r\nconst dhc = require('./images-retrowave/cyan/door_3.png');\r\nconst dho = require('./images-retrowave/cyan/door_3_4_opened.png');\r\n\r\nconst dvc = require('./images-retrowave/cyan/door2.png');\r\nconst dvo = require('./images-retrowave/cyan/door1_2_opened.png');\r\n\r\nconst dogLeft = require('./images-retrowave/cyan/dog_left.png');\r\nconst dogRight = require('./images-retrowave/cyan/dog_right.png');\r\n\r\n\r\nlet CyanResources = {\r\n    copLeft: new ex.Texture(copLeft),\r\n    copRight: new ex.Texture(copRight),\r\n\r\n    dogLeft: new ex.Texture(dogLeft),\r\n    dogRight: new ex.Texture(dogRight),\r\n\r\n    btn: new ex.Texture(btn),\r\n    btnPressed: new ex.Texture(btnPressed),\r\n\r\n    doorHorizontalClosed: new ex.Texture(dhc),\r\n    doorHorizontalOpen: new ex.Texture(dho),\r\n    doorVerticalClosed: new ex.Texture(dvc),\r\n    doorVerticalOpen: new ex.Texture(dvo),\r\n\r\n    leftTop: new ex.Texture(leftTop),\r\n    leftBottom: new ex.Texture(leftBottom),\r\n    rightTop: new ex.Texture(rightTop),\r\n    rightBottom: new ex.Texture(rightBottom),\r\n\r\n    endLeft: new ex.Texture(endLeft),\r\n    endDown: new ex.Texture(endDown),\r\n    endRight: new ex.Texture(endRight),\r\n    endTop: new ex.Texture(endTop),\r\n\r\n    topDown: new ex.Texture(topDown),\r\n    leftRight: new ex.Texture(leftRight),\r\n\r\n    cross: new ex.Texture(cross),\r\n    tTop: new ex.Texture(tTop),\r\n    tDown: new ex.Texture(tDown),\r\n    tRight: new ex.Texture(tRight),\r\n    tLeft: new ex.Texture(tLeft),\r\n}\r\n\r\nexport { CyanResources }\r\n","export { default as portal } from \"./portal\"\r\nexport { default as background } from \"./background\"\r\nexport { default as player1particle } from \"./player_1\"\r\nexport { default as player2particle } from \"./player_2\"\r\nexport { default as death } from \"./death\"\r\n","import * as ex from 'excalibur';\r\nconst sword = require('./images32/sword.png');\r\nconst player = require('./images32/player_05.png');\r\nconst empty = require('./images32/empty.png');\r\nconst door = require('./images32/block_06.png');\r\nconst finish = require('./images32/environment_03.png');\r\n\r\nconst controls = require('./images32/Controls.png');\r\nconst bg = require('./images-retrowave/bg.jpg');\r\n\r\nlet Resources = {\r\n    Sword: new ex.Texture(sword),\r\n    Empty: new ex.Texture(empty),\r\n    Door: new ex.Texture(door),\r\n    Finish: new ex.Texture(finish),\r\n\r\n    Bg: new ex.Texture(bg),\r\n    Controls: new ex.Texture(controls),\r\n}\r\n\r\nexport { Resources }\r\n","import * as ex from 'excalibur';\r\nimport { LevelOne } from './scenes/level1';\r\nimport { LevelTwo } from './scenes/level2';\r\nimport { LevelThree } from './scenes/level3';\r\nimport { Player } from './actors/player/player';\r\nimport { Resources } from './resources';\r\nimport { Keys } from 'excalibur/dist/Input';\r\nimport { Menu } from './scenes/menu';\r\nimport { MagentaResources } from './magentaResources';\r\nimport { CyanResources } from './cyanResources';\r\nimport { ScoreTime, createTimer } from './actors/timer';\r\nimport { DeathNote } from './actors/deathNote';\r\nimport { WinScreen } from './scenes/winScreen';\r\nimport { DeathEvent } from './actors/sobaka/sobaka';\r\n\r\nexport const globalEvents = new ex.EventDispatcher({})\r\n\r\nexport class Game extends ex.Engine {\r\n  controlsActive: boolean = false\r\n  finishControls: boolean = false\r\n  constructor() {\r\n    super({\r\n      width: 800,\r\n      height: 600,\r\n      displayMode: ex.DisplayMode.FullScreen,\r\n      backgroundColor: ex.Color.fromRGB(0, 0, 0, 0),\r\n      canvasElementId: \"game\"\r\n    });\r\n  }\r\n\r\n  public start(loader: ex.Loader) {\r\n    return super.start(loader);\r\n  }\r\n}\r\n\r\n/* \r\n  Init classes\r\n*/\r\nconst game = new Game();\r\nlet loader = new ex.Loader();\r\nconst timer = new ScoreTime(game)\r\nconst deathNote = new DeathNote(game)\r\n\r\nconst playerA = new Player(1, 1, true);\r\nconst playerB = new Player(1, 1, false);\r\n\r\n// scenes\r\nconst menu = new Menu(game)\r\n\r\nconst levels = [\r\n  new LevelOne(playerA, playerB, game, timer, deathNote),\r\n  new LevelTwo(playerA, playerB, game, timer, deathNote),\r\n  new LevelThree(playerA, playerB, game, timer, deathNote),\r\n  new WinScreen(game, timer)\r\n]\r\n\r\n// vars\r\nlet leveli = 0\r\nlet level = levels[leveli]\r\nlet aActive = true\r\n\r\n/* \r\n  Register scenes \r\n*/\r\ngame.addScene('menu', menu)\r\nlevels.forEach((level, i) => game.addScene(`level${i}`, level))\r\n\r\n/* \r\n  Register controls\r\n*/\r\ngame.input.pointers.primary.on(\"down\", (asd) => {\r\n  console.log(asd)\r\n  // Mouse click\r\n  game.input.pointers.primary.off(\"down\");\r\n  //timer.setTime(0)\r\n  timer.setTime(0)\r\n  game.goToScene('level0');\r\n});\r\n\r\nconst onHoldEvent = (event: ex.Input.KeyEvent) => {\r\n  if (!game.controlsActive) return\r\n\r\n  if (aActive)\r\n    playerA.move(event)\r\n  else\r\n    playerB.move(event)\r\n}\r\n\r\nconst onPressEvent = (event: ex.Input.KeyEvent) => {\r\n  if (game.finishControls) {\r\n    if (event.key === Keys.Space) {\r\n      aActive = !aActive\r\n      level.switchType(aActive)\r\n    }\r\n  }\r\n\r\n  if (!game.controlsActive) return\r\n\r\n  if (game.finishControls && game.controlsActive) {\r\n    game.finishControls = false\r\n    leveli = 0\r\n    level = levels[leveli]\r\n    game.input.pointers.primary.on(\"down\", () => {\r\n      // Mouse click\r\n      game.input.pointers.primary.off(\"down\");\r\n      //timer.setTime(0)\r\n      timer.setTime(0)\r\n      game.goToScene('level0');\r\n    });\r\n    game.goToScene('menu')\r\n  }\r\n\r\n  if (event.key === Keys.Space) {\r\n    aActive = !aActive\r\n    level.switchType(aActive)\r\n  }\r\n  const { x, y } = aActive ? playerA : playerB\r\n  if (event.key === Keys.G)\r\n    globalEvents.emit('playerDeath', new DeathEvent(x, y, aActive ? true : false))\r\n\r\n  if (event.key === Keys.T)\r\n    globalEvents.emit('finishLevel')\r\n}\r\n\r\ngame.input.keyboard.on('hold', onHoldEvent)\r\ngame.input.keyboard.on('press', onPressEvent)\r\n\r\n/* \r\n Load resources\r\n*/\r\nfor (let key in Resources) {\r\n  loader.addResource(Resources[key]);\r\n}\r\nfor (let key in MagentaResources) {\r\n  loader.addResource(MagentaResources[key]);\r\n}\r\nfor (let key in CyanResources) {\r\n  loader.addResource(CyanResources[key]);\r\n}\r\n\r\n/*\r\n  Game Events\r\n*/\r\nglobalEvents.on('finishLevel', _ => {\r\n  leveli++\r\n  level = levels[leveli]\r\n  game.goToScene(`level${leveli}`)\r\n  level.onActivate()\r\n  aActive = true\r\n  level.switchType(aActive)\r\n  playerA.toggle(aActive)\r\n  playerB.toggle(!aActive)\r\n})\r\n\r\nglobalEvents.on('playerDeath', (event: DeathEvent) => {\r\n  // leveli++\r\n  // level = levels[leveli]\r\n  game.goToScene(`level${leveli}`)\r\n  level.onActivate()\r\n  level.showDeathParticle(event.x, event.y, event.isA)\r\n  aActive = true\r\n  level.switchType(aActive)\r\n  playerA.toggle(aActive)\r\n  playerB.toggle(!aActive)\r\n})\r\n\r\nconst checkAndSend = (key: ex.Input.Keys) => {\r\n  if (game.input.keyboard.isHeld(key))\r\n    setTimeout(_ => onPressEvent(new ex.Input.KeyEvent(key)), 10)\r\n}\r\n\r\nglobalEvents.on('endMove', _ => {\r\n  checkAndSend(ex.Input.Keys.W)\r\n  checkAndSend(ex.Input.Keys.A)\r\n  checkAndSend(ex.Input.Keys.S)\r\n  checkAndSend(ex.Input.Keys.D)\r\n})\r\n\r\n/* \r\n  Start\r\n*/\r\ngame.start(loader).then(() => {\r\n  game.goToScene('menu');\r\n});\r\n","import * as ex from 'excalibur';\r\nimport { Keys } from 'excalibur/dist/Input';\r\nimport { WallTile } from '../wall/wallTile';\r\nimport { Resources } from '../../resources';\r\nimport { MagentaResources } from '../../magentaResources';\r\nimport { CyanResources } from '../../cyanResources';\r\nimport { Door } from '../door/door';\r\nimport { globalEvents } from '../..';\r\nimport { player1particle, player2particle } from \"../../particles\"\r\n\r\nconst TILE = 48\r\n\r\nexport class Player extends ex.Actor {\r\n    private prev: { x: number, y: number }\r\n    private collidable = [WallTile, Door]\r\n    moving: boolean\r\n    startpos: number\r\n    startposy: number\r\n    isA: boolean\r\n\r\n    constructor(tx: number, ty: number, isA: boolean) {\r\n        super();\r\n        this.setWidth(TILE);\r\n        this.setHeight(TILE);\r\n        this.x = TILE + tx * TILE;\r\n        this.y = TILE + ty * TILE;\r\n        this.prev = { x: this.x, y: this.y }\r\n        this.color = new ex.Color(255, 255, 255);\r\n        this.collisionType = ex.CollisionType.Passive;\r\n        this.isA = isA\r\n        this.moving = false\r\n        const sprite = MagentaResources.copLeft.asSprite()\r\n\r\n        this.addDrawing(\"left\", isA ? MagentaResources.copLeft.asSprite() : CyanResources.copLeft.asSprite())\r\n        this.addDrawing(\"right\", isA ? MagentaResources.copRight.asSprite() : CyanResources.copRight.asSprite())\r\n        this.addDrawing(\"hidden\", Resources.Empty.asSprite())\r\n        this.setDrawing(\"left\")\r\n        this.toggle(true)\r\n        this.add(!isA ? player1particle : player2particle)\r\n\r\n        this.on('precollision', (ev) => {\r\n            if (!this.collidable.some(collidableObject => ev.other instanceof collidableObject)) return\r\n            if (ev.other instanceof Door && (ev.other as Door).opened) return\r\n\r\n            if (ev.other instanceof WallTile && ev.other.isA !== this.isA) return\r\n\r\n            console.log('cancel', this.x, this.y, ev.other.x, ev.other.y)\r\n            this.cancelMove()\r\n        });\r\n    }\r\n\r\n    toggle = (flag: boolean) => {\r\n        this.setDrawing(flag ? \"left\" : \"hidden\")\r\n    }\r\n\r\n    cancelMove = () => {\r\n        this.x = this.prev.x\r\n        this.y = this.prev.y\r\n    }\r\n\r\n    setPos = (startpos: number, startposy: number, x: number, y: number) => {\r\n        this.startpos = startpos\r\n        this.startposy = startposy\r\n        this.x = this.startpos + x * TILE;\r\n        this.y = this.startposy + y * TILE;\r\n        this.prev = { x: this.x, y: this.y }\r\n    }\r\n\r\n    move = (event: ex.Input.KeyEvent) => {\r\n        if (this.moving) return\r\n        this.moving = true\r\n        this.setZIndex(1000)\r\n        const x = event.key === Keys.A\r\n            ? -1\r\n            : event.key === Keys.D\r\n                ? 1\r\n                : 0\r\n\r\n        const y = event.key === Keys.W\r\n            ? -1\r\n            : event.key === Keys.S\r\n                ? 1\r\n                : 0\r\n\r\n        if (x < 0) this.setDrawing('left')\r\n        if (x > 0) this.setDrawing('right')\r\n\r\n        this.prev = { x: this.x, y: this.y }\r\n\r\n        setTimeout(_ => {\r\n            this.x = this.x + x * TILE\r\n            this.y = this.y + y * TILE\r\n        }, 0)\r\n\r\n        setTimeout(_ => this.moving = false, 100)\r\n    }\r\n}","import * as ex from 'excalibur';\r\nimport { Keys } from 'excalibur/dist/Input';\r\nimport { WallTile } from '../wall/wallTile';\r\nimport { Resources } from '../../resources';\r\nimport { MagentaResources } from '../../magentaResources';\r\nimport { CyanResources } from '../../cyanResources';\r\nimport { Door } from '../door/door';\r\nimport { globalEvents } from '../..';\r\nimport { player1particle, player2particle } from \"../../particles\"\r\nimport { Player } from '../player/player';\r\nimport { ChangeTypeEvent } from '../../scenes/level';\r\nimport { Button } from '../button/button';\r\nimport { GameEvent } from 'excalibur';\r\n\r\nconst TILE = 48\r\n\r\nexport class DeathEvent extends GameEvent<any> {\r\n    x: number\r\n    y: number\r\n    isA: boolean\r\n    constructor(x: number, y: number, isA: boolean) {\r\n        super()\r\n\r\n        this.x = x\r\n        this.y = y\r\n        this.isA = isA\r\n    }\r\n}\r\n\r\nexport class Sobaka extends ex.Actor {\r\n    private next: { x: number, y: number }\r\n    private prev: { x: number, y: number }\r\n\r\n    steps = 0\r\n    direction = true\r\n    interval: NodeJS.Timer\r\n    isA: boolean\r\n    hidden: boolean\r\n    startpos: number\r\n    startposy: number\r\n\r\n    constructor(startpos: number, startposy: number, tx: number, ty: number, isA: boolean) {\r\n        super();\r\n        this.setWidth(TILE);\r\n        this.setHeight(TILE);\r\n        this.x = startpos + tx * TILE;\r\n        this.y = startposy + ty * TILE;\r\n        this.next = { x: this.x, y: this.y }\r\n        this.prev = { x: this.x, y: this.y }\r\n        this.color = new ex.Color(255, 255, 255);\r\n        this.collisionType = ex.CollisionType.Passive;\r\n        this.isA = isA\r\n        this.startpos = startpos\r\n        this.startposy = startposy\r\n\r\n        this.addDrawing(\"left\", isA ? MagentaResources.dogLeft.asSprite() : CyanResources.dogLeft.asSprite())\r\n        this.addDrawing(\"right\", isA ? MagentaResources.dogRight.asSprite() : CyanResources.dogRight.asSprite())\r\n        this.addDrawing(\"hidden\", Resources.Empty.asSprite())\r\n        this.toggle(true)\r\n\r\n        this.on('collisionstart', (ev) => {\r\n            if (ev.other instanceof Door && (ev.other as Door).opened) return\r\n            if (ev.other instanceof Button) return\r\n\r\n            if (ev.other instanceof Player && ev.other.isA === isA)\r\n                globalEvents.emit('playerDeath', new DeathEvent(ev.other.x, ev.other.y, isA))\r\n        });\r\n\r\n        globalEvents.on('switchType', event => {\r\n            if (event instanceof ChangeTypeEvent) {\r\n                this.toggle(event.data === this.isA)\r\n            }\r\n        })\r\n    }\r\n\r\n    setPos = (startpos: number, startposy: number, x: number, y: number, to: ex.Vector) => {\r\n        this.startpos = startpos\r\n        this.startposy = startposy\r\n        this.x = this.startpos + (x * TILE)\r\n        this.y = this.startposy + y * TILE;\r\n        this.prev = new ex.Vector(this.x, this.y)\r\n        if (this.hidden) return\r\n        const deltax = this.x - (this.startpos + TILE * to.x)\r\n        if (deltax < 0) this.setDrawing('right')\r\n        if (deltax > 0) this.setDrawing('left')\r\n    }\r\n\r\n    guljatj = (to: ex.Vector, speed: number) => {\r\n        const deltax = this.x - (this.startpos + TILE * to.x)\r\n\r\n        this.actions\r\n            .callMethod(() => {\r\n                if (this.hidden) return\r\n                if (deltax < 0) this.setDrawing('right')\r\n                if (deltax > 0) this.setDrawing('left')\r\n            })\r\n            .moveTo(\r\n                this.startpos + to.x * TILE,\r\n                this.startposy + to.y * TILE,\r\n                speed\r\n            )\r\n            .delay(10)\r\n            .callMethod(() => {\r\n                if (this.hidden) return\r\n                if (deltax < 0) this.setDrawing('left')\r\n                if (deltax > 0) this.setDrawing('right')\r\n            })\r\n            .moveTo(\r\n                this.prev.x,\r\n                this.prev.y,\r\n                speed\r\n            )\r\n            .repeatForever()\r\n    }\r\n\r\n    toggle = (flag: boolean) => {\r\n        this.hidden = !flag\r\n        this.setDrawing(flag ? \"left\" : \"hidden\")\r\n    }\r\n\r\n    move = (delta: ex.Vector) => {\r\n        if (delta.x < 0) this.setDrawing('left')\r\n        if (delta.x > 0) this.setDrawing('right')\r\n\r\n\r\n        this.prev = { ...this.next }\r\n        this.next = { x: this.next.x + delta.x * TILE, y: this.next.y + delta.y * TILE }\r\n\r\n        const contex = this.actions.moveTo(this.next.x, this.next.y, 500).asPromise()\r\n    }\r\n}\r\n","import * as ex from 'excalibur';\r\nimport { Player } from '../actors/player/player';\r\nimport { createWall } from '../actors/wall/wall';\r\nimport { Resources } from '../resources';\r\nimport { createBg } from './createbg';\r\nimport { globalEvents, Game } from '..';\r\nimport { Sobaka } from '../actors/sobaka/sobaka';\r\nimport { ScoreTime } from '../actors/timer';\r\nimport { death as deathParticle } from \"../particles\"\r\n\r\nexport class ChangeTypeEvent extends ex.GameEvent<boolean>{\r\n    data: boolean\r\n    constructor(data: boolean) {\r\n        super()\r\n        this.data = data\r\n    }\r\n}\r\n\r\nexport class Level extends ex.Scene {\r\n    public onInitialize(engine: ex.Engine) {\r\n    }\r\n    public onActivate() {\r\n    }\r\n    public onDeactivate() { }\r\n\r\n    public showDeathParticle(x: number, y: number, isA: boolean) {\r\n        // console.log(x, y, isA)\r\n        deathParticle.x = x\r\n        deathParticle.y = y\r\n        if (!isA) {\r\n            deathParticle.beginColor = ex.Color.fromHex('00EAFF');\r\n            deathParticle.endColor = ex.Color.fromHex('ED1B7B');\r\n        } else {\r\n            deathParticle.beginColor = ex.Color.fromHex('ED1B7B');\r\n            deathParticle.endColor = ex.Color.fromHex('00EAFF');\r\n        }\r\n        deathParticle.isEmitting  = true\r\n        setTimeout(() => {\r\n            deathParticle.isEmitting  = false\r\n        }, 150)\r\n      }\r\n\r\n    private aActive = true\r\n\r\n    playerA: Player\r\n    playerB: Player\r\n    game: Game\r\n    levelShown: boolean;\r\n\r\n    private objectA: ex.Actor[]\r\n    private objectB: ex.Actor[]\r\n    \r\n    constructor(playerA: Player, playerB: Player, objectsA: ex.Actor[], objectsB: ex.Actor[], engine: Game) {\r\n        super()\r\n        this.engine = engine\r\n        this.game = engine\r\n        this.playerA = playerA\r\n        this.playerB = playerB\r\n        this.objectA = objectsA\r\n        this.objectB = objectsB\r\n        this.add(createBg(engine))\r\n        this.add(deathParticle)\r\n    }\r\n\r\n    setPlayers = (startpos: number, startposy: number, xa: number, ya: number, xb: number, yb: number) => {\r\n        this.add(this.playerA)\r\n        this.add(this.playerB)\r\n        this.playerA.cancelMove()\r\n        this.playerB.cancelMove()\r\n        this.playerA.setPos(startpos, startposy, xa, ya)\r\n        this.playerB.setPos(startpos, startposy, xb, yb)\r\n\r\n        this.on(\"changePlayer\", _ => {\r\n            this.aActive = !this.aActive\r\n            this.switchType(this.aActive)\r\n        })\r\n\r\n        this.switchType(true)\r\n        this.switchType(false)\r\n        this.switchType(this.aActive)\r\n    }\r\n\r\n    private clear = () => {\r\n        // this.remove(this.playerA)\r\n        // this.remove(this.playerB)\r\n        this.objectA.forEach(x => {\r\n            if (x instanceof Sobaka) return\r\n            this.remove(x)\r\n        })\r\n        this.objectB.forEach(x => {\r\n            if (x instanceof Sobaka) return\r\n            this.remove(x)\r\n        })\r\n    }\r\n\r\n    switchType = (aActive: boolean) => {\r\n        globalEvents.emit('switchType', new ChangeTypeEvent(aActive))\r\n        this.playerA.toggle(aActive)\r\n        this.playerB.toggle(!aActive)\r\n        this.clear()\r\n        if (aActive) {\r\n            //this.add(this.playerA)\r\n            this.objectA.forEach(x => this.add(x))\r\n        } else {\r\n            //this.add(this.playerB)\r\n            this.objectB.forEach(x => this.add(x))\r\n        }\r\n    }\r\n\r\n    showLevelNumber = (num: number) => {\r\n        if (this.levelShown) return;\r\n        const label = new ex.Label(\r\n            `Level ${num}`,\r\n            this.engine.getWorldBounds().right / 2,\r\n            this.engine.getWorldBounds().top + 50\r\n        )\r\n        \r\n        label.opacity = 0;\r\n        label.fontFamily = \"'Press Start 2P'\"\r\n        label.fontSize = 30\r\n        label.color = ex.Color.Yellow\r\n        label.textAlign = ex.TextAlign.Center\r\n\r\n        this.add(label)\r\n        label.setZIndex(200);\r\n        label.actions\r\n            .fade(1, 3000)\r\n            .fade(0, 3000)\r\n        this.levelShown = true;\r\n    }\r\n}\r\n","import * as ex from 'excalibur';\r\nimport { Keys } from 'excalibur/dist/Input';\r\nimport { WallTile } from '../wall/wallTile';\r\nimport { globalEvents } from \"../../index\"\r\nimport { Player } from '../player/player';\r\nimport { Resources } from '../../resources';\r\nimport { portal } from \"../../particles\"\r\n\r\nconst TILE = 48\r\n\r\nexport class Finish extends ex.Actor {\r\n    private playerA: Player\r\n    private playerB: Player\r\n\r\n    constructor(startpos: number, startposy: number, tx: number, ty: number, playerA: Player, playerB: Player) {\r\n        super();\r\n        this.setWidth(TILE);\r\n        this.setHeight(TILE);\r\n        this.playerA = playerA\r\n        this.playerB = playerB\r\n        this.x = startpos + tx * TILE;\r\n        this.y = startposy + ty * TILE;\r\n        this.color = new ex.Color(255, 255, 255);\r\n        this.collisionType = ex.CollisionType.Passive;\r\n\r\n        this.addDrawing(Resources.Finish)\r\n\r\n        this.add(portal)\r\n\r\n        this.on('collisionstart', (ev) => {\r\n            if (!(ev.other instanceof Player)) return\r\n\r\n            const col = this.collides(ev.other)\r\n            if (col === null || Math.abs(col.x) < 5 && Math.abs(col.y) < 5) return\r\n\r\n            console.log(this.collides(this.playerA), \"A\")\r\n            console.log(this.collides(this.playerB), \"B\")\r\n\r\n            if (this.collides(this.playerA) && this.collides(this.playerB)) {\r\n                globalEvents.emit('finishLevel')\r\n            }\r\n        });\r\n    }\r\n}\r\n","import * as ex from 'excalibur';\r\nimport { WallTile } from './wallTile'\r\nimport { MagentaResources } from '../../magentaResources';\r\n\r\nexport const createWall = (x: number, y: number, w: number, h: number, texture: ex.Texture, isA: boolean): WallTile[] => {\r\n    let tiles = []\r\n    for (let ix = 0; ix < w; ix++) {\r\n        for (let iy = 0; iy < h; iy++) {\r\n            const wallTile = new WallTile(0, 0, x + ix, y + iy, texture, isA)\r\n            tiles.push(wallTile)\r\n        }\r\n    }\r\n    return tiles\r\n}\r\n\r\nexport const createWalls = (startpos: number, startposy: number, wallsConfig: (ex.Texture | string)[][], isA: boolean) => {\r\n    const walls: WallTile[] = []\r\n    wallsConfig.forEach((row, y) => {\r\n        row.forEach((col, x) => {\r\n            const tile = wallsConfig[y][x]\r\n            if (typeof tile === 'string') { }\r\n            else\r\n                walls.push(new WallTile(startpos, startposy, x, y, tile, isA))\r\n        })\r\n    })\r\n\r\n    return walls\r\n}\r\n\r\nexport const createBorders = (startpos: number, startposy: number, sidex: number, sidey: number, texture: ex.Texture, isA: boolean): WallTile[] => {\r\n    let tiles = []\r\n    const leftTop = new WallTile(startpos, startposy, 0, 0, MagentaResources.leftTop, isA)\r\n    const leftBottom = new WallTile(startpos, startposy, 0, sidey - 1, MagentaResources.leftBottom, isA)\r\n    const rightTop = new WallTile(startpos, startposy, sidex - 1, 0, MagentaResources.rightTop, isA)\r\n    const rightBottom = new WallTile(startpos, startposy, sidex - 1, sidey - 1, MagentaResources.rightBottom, isA)\r\n\r\n    const leftWall = createWall(0, 1, 1, sidey - 2, MagentaResources.topDown, isA)\r\n    const topWall = createWall(1, 0, sidex - 2, 1, MagentaResources.leftRight, isA)\r\n\r\n    const rightWall = createWall(sidex - 1, 1, 1, sidey - 2, MagentaResources.topDown, isA)\r\n    const bottomWall = createWall(1, sidey - 1, sidex - 2, 1, MagentaResources.leftRight, isA)\r\n\r\n    return [\r\n        leftTop,\r\n        leftBottom,\r\n        rightTop,\r\n        rightBottom,\r\n        ...leftWall,\r\n        ...topWall,\r\n        ...rightWall,\r\n        ...bottomWall\r\n    ]\r\n}","import * as ex from 'excalibur';\r\n\r\nconst TILE = 48\r\n\r\nexport class Door extends ex.Actor {\r\n  opened: boolean = false\r\n\r\n  constructor(startpos: number, startposy: number, tx: number, ty: number, texture: ex.Texture, altTexture: ex.Texture) {\r\n    super();\r\n    this.setWidth(TILE);\r\n    this.setHeight(TILE);\r\n    this.x = startpos + tx * TILE;\r\n    this.y = startposy + ty * TILE;\r\n    this.color = new ex.Color(255, 255, 255);\r\n    this.addDrawing(\"closed\", texture.asSprite())\r\n    this.addDrawing(\"opened\", altTexture.asSprite())\r\n    this.setDrawing(this.opened ? \"opened\" : \"closed\")\r\n    this.collisionType = ex.CollisionType.Passive;\r\n\r\n    this.toggle = this.toggle.bind(this)\r\n  }\r\n\r\n  toggle(flag: boolean) {\r\n    this.opened = flag\r\n    this.setDrawing(this.opened ? \"opened\" : \"closed\")\r\n  }\r\n}","import * as ex from \"excalibur\";\r\nimport { Resources } from \"../resources\";\r\n\r\nexport const createBg = (engine: ex.Engine) => {\r\n    const bb = engine.getWorldBounds()\r\n    const bgSprite = Resources.Bg.asSprite()\r\n    const scalex = bb.right / 1920\r\n    const scaley = bb.bottom / 1080\r\n    bgSprite.x = bgSprite.drawWidth / 2\r\n    bgSprite.y = bgSprite.drawHeight / 2\r\n    const bg = new ex.Actor()\r\n    bg.x = bb.right / 2\r\n    bg.y = bb.bottom / 2\r\n    bg.scale = new ex.Vector(scalex > scaley ? scalex : scaley, scalex > scaley ? scalex : scaley)\r\n    bg.addDrawing(bgSprite)\r\n\r\n    return bg\r\n}","import { Button } from \"./actors/button/button\"\r\nimport { Door } from \"./actors/door/door\"\r\nimport { Resources } from './resources';\r\nimport { MagentaResources } from './magentaResources';\r\nimport { CyanResources } from \"./cyanResources\";\r\n\r\nexport type coords = {\r\n  x: number\r\n  y: number\r\n}\r\n\r\nexport const createButtonDoors = (startpos: number, startposy: number, buttonCoords: coords, doorsCoords: coords, horizontal: boolean, isA: boolean) => {\r\n  const doors = [doorsCoords].map(coords => new Door(\r\n    startpos,\r\n    startposy,\r\n    coords.x,\r\n    coords.y,\r\n    horizontal\r\n      ? !isA\r\n        ? MagentaResources.doorHorizontalClosed\r\n        : CyanResources.doorHorizontalClosed\r\n      : !isA\r\n        ? MagentaResources.doorVerticalClosed\r\n        : CyanResources.doorVerticalClosed,\r\n    horizontal\r\n      ? !isA\r\n        ? MagentaResources.doorHorizontalOpen\r\n        : CyanResources.doorHorizontalOpen\r\n      : !isA\r\n        ? MagentaResources.doorVerticalOpen\r\n        : CyanResources.doorVerticalOpen,\r\n  ))\r\n  const button = new Button(\r\n    startpos,\r\n    startposy,\r\n    buttonCoords.x,\r\n    buttonCoords.y,\r\n    isA ? MagentaResources.btn : CyanResources.btn,\r\n    isA ? MagentaResources.btnPressed : CyanResources.btnPressed,\r\n    doors,\r\n    isA)\r\n\r\n  return { doors, button }\r\n}","import * as ex from 'excalibur';\r\nimport { Sobaka } from '../sobaka/sobaka';\r\nimport { Player } from '../player/player';\r\nimport { CollisionStartEvent } from 'excalibur';\r\n\r\nconst TILE = 48\r\n\r\nexport class Button extends ex.Actor {\r\n    actors: ex.Actor[]\r\n    isA: boolean\r\n    constructor(startpos: number, startposy: number, tx: number, ty: number, texture: ex.Texture, texturePressed: ex.Texture, actors: ex.Actor[], isA: boolean) {\r\n        super();\r\n        this.setWidth(TILE);\r\n        this.setHeight(TILE);\r\n        this.x = startpos + tx * TILE;\r\n        this.y = startposy + ty * TILE;\r\n        this.isA = isA\r\n        this.color = new ex.Color(255, 255, 255);\r\n        this.addDrawing('default', texture.asSprite())\r\n        this.addDrawing('pressed', texturePressed.asSprite())\r\n        this.collisionType = ex.CollisionType.Passive;\r\n        this.actors = actors\r\n        this.setDrawing('default')\r\n\r\n        this.on('collisionstart', this.onCollisionStart)\r\n        this.on('collisionend', this.onCollisionEnd)\r\n    }\r\n\r\n    onCollisionStart(ev: ex.CollisionStartEvent) {\r\n        if (ev.other instanceof Sobaka) return\r\n        if (ev.other instanceof Player && ev.other.isA !== this.isA) return\r\n\r\n        const col = this.collides(ev.other)\r\n        if (col === null || Math.abs(col.x) < 5 && Math.abs(col.y) < 5) return\r\n\r\n        setTimeout(_ => {\r\n\r\n            if (!this.collides(ev.other)) return\r\n            this.actors.forEach(actor => {\r\n                const toggle = (actor as any).toggle\r\n                console.log('press')\r\n                if (typeof toggle === 'function') {\r\n                    toggle(true)\r\n                    this.setDrawing('pressed')\r\n                }\r\n            })\r\n        }, 10)\r\n    }\r\n\r\n    onCollisionEnd(ev) {\r\n        setTimeout(_ => {\r\n            if (ev.other instanceof Sobaka) return\r\n\r\n            if (this.collides(ev.other)) return\r\n            this.actors.forEach(actor => {\r\n                const toggle = (actor as any).toggle\r\n                console.log('depress')\r\n\r\n                if (typeof toggle === 'function') {\r\n                    toggle(false)\r\n                    this.setDrawing('default')\r\n                }\r\n            })\r\n        }, 10)\r\n    }\r\n}\r\n","import * as ex from 'excalibur';\r\n\r\nconst TILE = 48\r\n\r\nexport class WallTile extends ex.Actor {\r\n    isA: boolean\r\n    constructor(startpos: number, startposy: number, tx: number, ty: number, texture: ex.Texture, isA: boolean) {\r\n        super();\r\n        this.setWidth(TILE);\r\n        this.setHeight(TILE);\r\n        this.x = startpos + tx * TILE;\r\n        this.y = startposy + ty * TILE;\r\n        this.isA = isA\r\n        this.color = new ex.Color(255, 255, 255);\r\n        this.addDrawing(texture)\r\n        this.collisionType = ex.CollisionType.Passive;\r\n    }\r\n}\r\n","import * as ex from 'excalibur';\r\nimport { Player } from '../actors/player/player';\r\nimport { Level } from './level';\r\nimport { createWall, createBorders } from '../actors/wall/wall';\r\nimport { Resources } from '../resources';\r\nimport { Button } from \"../actors/button/button\"\r\nimport { Door } from \"../actors/door/door\"\r\nimport { Finish } from '../actors/finish/finish';\r\nimport { Label, Vector } from 'excalibur';\r\nimport { createBg } from './createbg';\r\nimport { ScoreTime } from '../actors/timer';\r\nimport { Game } from '..';\r\n\r\nexport class WinScreen extends ex.Scene {\r\n    public onInitialize(engine: ex.Engine) { }\r\n    public onActivate() {\r\n        this.timer.stopTime()\r\n        this.score.text = this.timer.getTime()\r\n        this.game.finishControls = true\r\n    }\r\n    public onDeactivate() { }\r\n\r\n    game: Game\r\n    label: ex.Label\r\n    label2: ex.Label\r\n    score: ex.Label\r\n    scoreLabel: ex.Label\r\n    continue: ex.Label\r\n    timer: ScoreTime\r\n\r\n    constructor(engine: Game, timer: ScoreTime) {\r\n        super();\r\n        this.game = engine\r\n        this.timer = timer\r\n        this.label = new ex.Label(\r\n            `Congratulations`,\r\n            engine.getWorldBounds().right / 2,\r\n            engine.getWorldBounds().bottom / 2\r\n        )\r\n\r\n        this.label.fontFamily = \"'Press Start 2P'\"\r\n        this.label.fontSize = 40\r\n        this.label.color = ex.Color.fromHex('ED1B7B')\r\n        this.label.textAlign = ex.TextAlign.Center\r\n        this.label.opacity = 0\r\n\r\n        this.label2 = new ex.Label(\r\n            `You won!`,\r\n            engine.getWorldBounds().right / 2,\r\n            engine.getWorldBounds().bottom / 2 + 70\r\n        )\r\n\r\n        this.label2.fontFamily = \"'Press Start 2P'\"\r\n        this.label2.fontSize = 40\r\n        this.label2.color = ex.Color.fromHex('ED1B7B')\r\n        this.label2.textAlign = ex.TextAlign.Center\r\n        this.label2.opacity = 0\r\n\r\n        this.scoreLabel = new ex.Label(\r\n            `Your score:`,\r\n            engine.getWorldBounds().right / 2,\r\n            engine.getWorldBounds().bottom / 2\r\n        )\r\n\r\n        this.scoreLabel.fontFamily = \"'Press Start 2P'\"\r\n        this.scoreLabel.fontSize = 25\r\n        this.scoreLabel.color = ex.Color.fromHex('ED1B7B')\r\n        this.scoreLabel.textAlign = ex.TextAlign.Center\r\n        this.scoreLabel.opacity = 0\r\n\r\n        this.score = new ex.Label(\r\n            this.timer.text,\r\n            engine.getWorldBounds().right / 2,\r\n            engine.getWorldBounds().bottom / 2 + 35\r\n        )\r\n\r\n        this.score.fontFamily = \"'Press Start 2P'\"\r\n        this.score.fontSize = 25\r\n        this.score.color = ex.Color.fromHex('ED1B7B')\r\n        this.score.textAlign = ex.TextAlign.Center\r\n        this.score.opacity = 0\r\n\r\n        this.continue = new ex.Label(\r\n            'Press any key to continue',\r\n            engine.getWorldBounds().right / 2,\r\n            engine.getWorldBounds().bottom - 30\r\n        )\r\n\r\n        this.continue.fontFamily = \"'Press Start 2P'\"\r\n        this.continue.fontSize = 20\r\n        this.continue.color = ex.Color.fromHex('ED1B7B')\r\n        this.continue.textAlign = ex.TextAlign.Center\r\n        this.continue.opacity = 0\r\n\r\n        this.label.actions\r\n            .callMethod(() => {\r\n                this.label2.actions\r\n                    .fade(1, 2000)\r\n            })\r\n            .fade(1, 2000)\r\n            .callMethod(() => {\r\n                this.label2.actions\r\n                    .scaleTo(1.5, 1.5, 0.1, 0.1)\r\n            })\r\n            .scaleTo(1.5, 1.5, 0.1, 0.1)\r\n            .callMethod(() => {\r\n                this.label2.actions\r\n                    .moveTo(this.label2.x, this.label2.y - 200, 700)\r\n            })\r\n            .moveTo(this.label.x, this.label.y - 200, 700)\r\n            .callMethod(() => {\r\n                this.scoreLabel.actions\r\n                    .fade(1, 2000)\r\n                    .callMethod(() => {\r\n                        this.score.actions\r\n                            .fade(1, 2000)\r\n                            .delay(1000)\r\n                            .callMethod(() => {\r\n                                this.game.controlsActive = true\r\n                                this.continue.actions\r\n                                    .fade(1, 1000)\r\n                            })\r\n                    })\r\n            })\r\n\r\n\r\n        this.add(createBg(engine))\r\n        this.add(this.label)\r\n        this.add(this.label2)\r\n        this.add(this.score)\r\n        this.add(this.scoreLabel)\r\n        this.add(this.continue)\r\n    }\r\n\r\n    switchType = (aActive: boolean) => {\r\n        console.log('TEST')\r\n        this.label.color = aActive ? ex.Color.fromHex('ED1B7B') : ex.Color.Cyan\r\n        this.label2.color = aActive ? ex.Color.fromHex('ED1B7B') : ex.Color.Cyan\r\n        this.score.color = aActive ? ex.Color.fromHex('ED1B7B') : ex.Color.Cyan\r\n        this.scoreLabel.color = aActive ? ex.Color.fromHex('ED1B7B') : ex.Color.Cyan\r\n        this.continue.color = aActive ? ex.Color.fromHex('ED1B7B') : ex.Color.Cyan\r\n    }\r\n    showDeathParticle = (x: number, y: number, isA: boolean) => { }\r\n}\r\n","import * as ex from 'excalibur';\r\nimport { globalEvents } from '..';\r\n\r\nconst TILE = 48\r\n\r\nexport class DeathNote extends ex.Label {\r\n    showing: boolean\r\n    constructor(engine: ex.Engine) {\r\n        super('You failed!', engine.getWorldBounds().right - 100, 130)\r\n\r\n        this.fontFamily = \"'Press Start 2P'\"\r\n        this.color = ex.Color.White\r\n        this.fontSize = 20\r\n        this.textAlign = ex.TextAlign.Right\r\n        this.opacity = 0\r\n\r\n        this.showing = false\r\n\r\n        globalEvents.on('playerDeath', () => {\r\n            if (this.showing) return\r\n\r\n            this.showing = true\r\n            this.actions\r\n                .fade(1, 1000)\r\n                .delay(1000)\r\n                .fade(0, 1000)\r\n                .asPromise()\r\n                .then(_ => this.showing = false)\r\n        })\r\n    }\r\n\r\n    showDeath = () => {\r\n\r\n    }\r\n}\r\n","import * as ex from 'excalibur';\r\n\r\nconst TILE = 48\r\n\r\nexport const createTimer = () => {\r\n    let time = 0\r\n    const label = new ex.Label(time.toString(), 200, 100)\r\n    label.fontFamily = \"'Press Start 2P'\"\r\n    label.color = ex.Color.White\r\n    label.textAlign = ex.TextAlign.Right\r\n\r\n    setInterval(_ => {\r\n        time++\r\n        label.text = msToTime(time)\r\n    }, 100)\r\n\r\n    const resetTime = () => time = 0\r\n\r\n    return { label, resetTime }\r\n}\r\n\r\nfunction msToTime(duration: number) {\r\n    const dur = duration * 100;\r\n    const milliseconds = dur % 1000 / 100\r\n    const seconds = dur / 1000 % 60\r\n    const minutes = dur / (1000 * 60) % 60\r\n\r\n    const m = (minutes < 10) ? \"0\" + minutes.toFixed(0) : minutes.toFixed(0);\r\n    const s = (seconds < 10) ? \"0\" + seconds.toFixed(0) : seconds.toFixed(0);\r\n\r\n    return m + \":\" + s + \".\" + milliseconds;\r\n}\r\n\r\nexport class ScoreTime extends ex.Label {\r\n    time: number\r\n    interval: number\r\n    constructor(engine: ex.Engine) {\r\n        super('0:00', engine.getWorldBounds().right - 100, 100)\r\n        this.time = 0\r\n\r\n        this.fontFamily = \"'Press Start 2P'\"\r\n        this.color = ex.Color.White\r\n        this.textAlign = ex.TextAlign.Right\r\n\r\n        this.interval = window.setInterval(_ => {\r\n            this.time++\r\n            this.text = msToTime(this.time)\r\n        }, 100)\r\n\r\n    }\r\n\r\n    setTime = (time: number) => {\r\n        this.time = time\r\n        this.text = msToTime(this.time)\r\n    }\r\n\r\n    getTime = () => {\r\n        return msToTime(this.time)\r\n    }\r\n\r\n    stopTime = () => {\r\n        window.clearInterval(this.interval)\r\n    }\r\n}\r\n","import * as ex from 'excalibur';\r\nimport { Player } from '../actors/player/player';\r\nimport { Level } from './level';\r\nimport { createWall, createBorders } from '../actors/wall/wall';\r\nimport { Resources } from '../resources';\r\nimport { Button } from \"../actors/button/button\"\r\nimport { Door } from \"../actors/door/door\"\r\nimport { Finish } from '../actors/finish/finish';\r\nimport { Label, Vector } from 'excalibur';\r\nimport { createBg } from './createbg';\r\n\r\nexport class Menu extends ex.Scene {\r\n    public onInitialize(engine: ex.Engine) { }\r\n    public onActivate() { }\r\n    public onDeactivate() { }\r\n\r\n    constructor(engine: ex.Engine) {\r\n        super();\r\n\r\n        const label = new ex.Label(\r\n            \"Click to start!\",\r\n            engine.getWorldBounds().right / 2,\r\n            engine.getWorldBounds().top + 200\r\n        )\r\n\r\n        label.fontFamily = \"'Press Start 2P'\"\r\n        label.fontSize = 30\r\n        label.color = ex.Color.Cyan\r\n        label.textAlign = ex.TextAlign.Center\r\n\r\n        label.actions\r\n            .scaleTo(1.5, 1.5, 1.5, 1.5)\r\n            .scaleTo(1, 1, 1.5, 1.5)\r\n            .repeatForever()\r\n\r\n        const copyright = new ex.Label(\r\n            \"<c> Cringefest, Junction 2018\",\r\n            engine.getWorldBounds().right / 2,\r\n            engine.getWorldBounds().bottom - 20\r\n        )\r\n\r\n        copyright.fontFamily = \"'Press Start 2P'\"\r\n        copyright.fontSize = 10\r\n        copyright.color = ex.Color.fromHex('ED1B7B')\r\n        copyright.textAlign = ex.TextAlign.Center\r\n\r\n        const bb = engine.getWorldBounds()\r\n        const scalex = bb.right / 1920\r\n        const scaley = bb.bottom / 1080\r\n        const controls = new ex.Actor(\r\n            engine.getWorldBounds().right / 2,\r\n            engine.getWorldBounds().bottom / 2)\r\n\r\n        const csprite = Resources.Controls.asSprite()\r\n        csprite.x = csprite.drawWidth / 2\r\n        csprite.y = csprite.drawHeight / 2\r\n\r\n        // csprite.scale = new ex.Vector(scalex > scaley ? scalex : scaley, scalex > scaley ? scalex : scaley)\r\n\r\n        controls.x = bb.right / 2\r\n        controls.y = bb.bottom / 2\r\n        controls.scale = new ex.Vector(scalex < scaley ? scalex : scaley, scalex < scaley ? scalex : scaley)\r\n        controls.addDrawing(csprite)\r\n\r\n        /* \r\n        const bb = engine.getWorldBounds()\r\n    const bgSprite = Resources.Bg.asSprite()\r\n    const scalex = bb.right / 1920\r\n    const scaley = bb.bottom / 1080\r\n    bgSprite.x = bgSprite.drawWidth / 2\r\n    bgSprite.y = bgSprite.drawHeight / 2\r\n    const bg = new ex.Actor()\r\n    bg.x = bb.right / 2\r\n    bg.y = bb.bottom / 2\r\n    bg.scale = new ex.Vector(scalex > scaley ? scalex : scaley, scalex > scaley ? scalex : scaley)\r\n    bg.addDrawing(bgSprite)\r\n        */\r\n\r\n        this.add(createBg(engine))\r\n        this.add(label)\r\n        this.add(copyright)\r\n        this.add(controls)\r\n    }\r\n}\r\n","import * as ex from 'excalibur';\r\nimport { Player } from '../actors/player/player';\r\nimport { Level } from './level';\r\nimport { createWall, createBorders, createWalls } from '../actors/wall/wall';\r\nimport { Resources } from '../resources';\r\nimport { MagentaResources } from '../magentaResources';\r\nimport { CyanResources } from '../cyanResources';\r\nimport { Button } from \"../actors/button/button\"\r\nimport { Door } from \"../actors/door/door\"\r\nimport { Finish } from '../actors/finish/finish';\r\nimport { createButtonDoors, coords } from \"../createButtonDoors\"\r\nimport { flatten } from \"lodash\"\r\nimport { background } from \"../particles\"\r\nimport { Sobaka } from '../actors/sobaka/sobaka';\r\nimport { Vector } from 'excalibur';\r\nimport { ScoreTime } from '../actors/timer';\r\nimport { Game, globalEvents } from '..';\r\n\r\nconst {\r\n  leftTop: mlt,\r\n  leftBottom: mlb,\r\n  rightTop: mrt,\r\n  rightBottom: mrb,\r\n\r\n  endLeft: mel,\r\n  endDown: med,\r\n  endRight: mer,\r\n  endTop: met,\r\n\r\n  leftRight: mlr,\r\n  topDown: mtb,\r\n\r\n  cross: mcc,\r\n  tTop: mtt,\r\n  tDown: mtd,\r\n  tRight: mtr,\r\n  tLeft: mtl\r\n} = MagentaResources\r\n\r\nconst {\r\n  leftTop: clt,\r\n  leftBottom: clb,\r\n  rightTop: crt,\r\n  rightBottom: crb,\r\n\r\n  endLeft: cel,\r\n  endDown: ced,\r\n  endRight: cer,\r\n  endTop: cet,\r\n\r\n  leftRight: clr,\r\n  topDown: ctb,\r\n\r\n  cross: ccc,\r\n  tTop: ctt,\r\n  tDown: ctd,\r\n  tRight: ctr,\r\n  tLeft: ctl\r\n} = CyanResources\r\n\r\nconst mapA = [\r\n  [mlt, mlr, mlr, mlr, mlr, mlr, mlr, mlr, mlr, mlr, mlr, mtd, mlr, mrt],\r\n  [mtb, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', mtb],\r\n  [mtr, mlr, mrt, ' ', mlt, mlr, ' ', mlr, mlr, mtd, mtd, mrb, ' ', mtb],\r\n  [mtb, ' ', mtb, ' ', mtb, ' ', ' ', ' ', ' ', mtb, mtb, ' ', ' ', mtb],\r\n  [mtb, ' ', mlb, mlr, mrb, ' ', ' ', ' ', ' ', mtb, mtb, ' ', ' ', mtb],\r\n  [mtb, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', mtb, mtb, ' ', ' ', mtb],\r\n  [mtb, ' ', ' ', met, ' ', ' ', ' ', ' ', mlt, mtt, mtt, mlr, ' ', mtl],\r\n  [mtr, mer, ' ', mlb, mlr, mlr, mlr, mlr, mtl, ' ', ' ', ' ', ' ', mtb],\r\n  [mtb, ' ', ' ', ' ', ' ', ' ', ' ', ' ', mtb, ' ', ' ', ' ', ' ', mtb],\r\n  [mtb, ' ', mel, mtd, mlr, mrt, ' ', ' ', mtr, mlr, mer, ' ', ' ', mtb],\r\n  [mtb, ' ', ' ', mtb, ' ', mtb, ' ', ' ', mtb, ' ', ' ', ' ', ' ', mtb],\r\n  [mtr, mer, ' ', mtb, ' ', mlb, mer, ' ', mlb, mlr, mrt, ' ', ' ', mtb],\r\n  [mtb, ' ', ' ', mtb, ' ', ' ', ' ', ' ', ' ', ' ', mtb, ' ', ' ', mtb],\r\n  [mlb, mlr, mlr, mtt, mlr, mlr, mlr, mlr, mlr, mlr, mtt, mlr, mlr, mrb]\r\n]\r\n\r\nconst mapB = [\r\n  [clt, clr, ctd, clr, ctd, clr, clr, clr, ctd, clr, clr, clr, clr, crt],\r\n  [ctb, ' ', clb, clr, crb, ' ', ' ', ' ', ced, ' ', ' ', ' ', ' ', ctb],\r\n  [ctb, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ctb],\r\n  [ctr, cer, ' ', clt, clr, ctd, clr, clr, clr, crt, ' ', ' ', ' ', ctb],\r\n  [ctb, ' ', ' ', ctb, ' ', ' ', ' ', ' ', ' ', ctb, ' ', ' ', ' ', ctb],\r\n  [ctb, ' ', clt, ctt, clr, ctt, clr, crt, ' ', ctb, ' ', ' ', ' ', ctb],\r\n  [ctb, ' ', ctb, ' ', ' ', ' ', ' ', ctb, ' ', ctb, ' ', ' ', ' ', ctb],\r\n  [ctb, ' ', clb, clr, clr, cer, ' ', clb, ' ', ctl, ' ', ' ', ' ', ctb],\r\n  [ctb, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ctb, ' ', ' ', ' ', ctb],\r\n  [ctb, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ctb, ' ', ' ', ' ', ctb],\r\n  [ctb, ' ', cel, cer, ' ', ' ', ' ', ' ', ' ', ctb, ' ', ' ', ' ', ctb],\r\n  [ctb, ' ', ' ', ' ', ' ', clt, clr, cer, ' ', clb, clr, crt, ' ', ctb],\r\n  [ctb, ' ', ' ', ' ', ' ', ctb, ' ', ' ', ' ', ' ', ' ', ctb, ' ', ctb],\r\n  [clb, clr, clr, clr, clr, ctt, clr, clr, clr, clr, clr, ctt, clr, crb]\r\n]\r\n\r\nexport class LevelThree extends Level {\r\n  dog1: Sobaka\r\n  dog2: Sobaka\r\n  dog3: Sobaka\r\n  dog4: Sobaka\r\n  dog5: Sobaka\r\n  public onInitialize(engine: ex.Engine) { }\r\n  public onActivate() {\r\n    const offsetx = Math.round(this.engine.getWorldBounds().right / 2 + 24 - mapA[0].length / 2 * 48)\r\n    const offsety = Math.round(this.engine.getWorldBounds().bottom / 2 + 24 - mapA.length / 2 * 48)\r\n    this.setPlayers(offsetx, offsety, 4, 10, 4, 4)\r\n    this.game.controlsActive = true\r\n    this.dog1.setPos(offsetx, offsety, 4, 12, new Vector(9, 12))\r\n    this.dog2.setPos(offsetx, offsety, 1, 1, new Vector(10, 1))\r\n    this.dog3.setPos(offsetx, offsety, 10, 5, new Vector(12, 5))\r\n    this.dog3.setPos(offsetx, offsety, 10, 7, new Vector(12, 7))\r\n    this.dog3.setPos(offsetx, offsety, 10, 9, new Vector(12, 9))\r\n    this.showLevelNumber(3);\r\n  }\r\n  public onDeactivate() { this.game.controlsActive = false }\r\n\r\n  constructor(playerA: Player, playerB: Player, engine: Game, timer: ex.Label, deathNote: ex.Label) {\r\n    const offsetx = Math.round(engine.getWorldBounds().right / 2 + 24 - mapA[0].length / 2 * 48)\r\n    const offsety = Math.round(engine.getWorldBounds().bottom / 2 + 24 - mapA.length / 2 * 48)\r\n    const mapATiles = createWalls(offsetx, offsety, mapA, true)\r\n    const mapBTiles = createWalls(offsetx, offsety, mapB, false)\r\n    const buttonsDoorsCoordsA = [\r\n      {\r\n        button: { x: 1, y: 12 },\r\n        doors: [{ x: 5, y: 4 }]\r\n      }\r\n    ]\r\n\r\n    const buttonsDoorsCoordsA2 = [\r\n      {\r\n        button: { x: 1, y: 1 },\r\n        doors: [{ x: 8, y: 7 }]\r\n      }\r\n    ]\r\n\r\n    const buttonsDoorsCoordsB = [\r\n      {\r\n        button: { x: 6, y: 4 },\r\n        doors: [{ x: 6, y: 2 }]\r\n      },\r\n      {\r\n        button: { x: 6, y: 12 },\r\n        doors: [{ x: 12, y: 6 }]\r\n      }\r\n    ]\r\n\r\n    const buttonsDoorsCoordsB2 = [\r\n      {\r\n        button: { x: 3, y: 6 },\r\n        doors: [{ x: 11, y: 1 }]\r\n      }\r\n    ]\r\n\r\n    const buttonsDoorsAVertical = buttonsDoorsCoordsA.map(buttonsDoorsCoord => createButtonDoors(\r\n      offsetx,\r\n      offsety,\r\n      buttonsDoorsCoord.button,\r\n      buttonsDoorsCoord.doors[0],\r\n      false, true))\r\n    const buttonsAVertical = buttonsDoorsAVertical.map(item => item.button)\r\n    const doorsAVertical = buttonsDoorsAVertical.map(item => item.doors)\r\n\r\n    const buttonsDoorsAHorizontal = buttonsDoorsCoordsA2.map(buttonsDoorsCoord => createButtonDoors(\r\n      offsetx,\r\n      offsety,\r\n      buttonsDoorsCoord.button,\r\n      buttonsDoorsCoord.doors[0],\r\n      true, true))\r\n    const buttonsAHorizontal = buttonsDoorsAHorizontal.map(item => item.button)\r\n    const doorsAHorizontal = buttonsDoorsAHorizontal.map(item => item.doors)\r\n\r\n    const buttonsDoorsBHorizontal = buttonsDoorsCoordsB.map(buttonsDoorsCoord => createButtonDoors(\r\n      offsetx,\r\n      offsety,\r\n      buttonsDoorsCoord.button,\r\n      buttonsDoorsCoord.doors[0],\r\n      true, false))\r\n    const buttonsBHorizontal = buttonsDoorsBHorizontal.map(item => item.button)\r\n    const doorsBHorizontal = buttonsDoorsBHorizontal.map(item => item.doors)\r\n\r\n    const buttonsDoorsBVertical = buttonsDoorsCoordsB2.map(buttonsDoorsCoord => createButtonDoors(\r\n      offsetx,\r\n      offsety,\r\n      buttonsDoorsCoord.button,\r\n      buttonsDoorsCoord.doors[0],\r\n      false, false))\r\n    const buttonsBVertical = buttonsDoorsBVertical.map(item => item.button)\r\n    const doorsBVertical = buttonsDoorsBVertical.map(item => item.doors)\r\n\r\n\r\n    const finish = new Finish(offsetx, offsety, 12, 12, playerA, playerB)\r\n\r\n    const dog1 = new Sobaka(offsetx, offsety, 4, 12, true)\r\n    dog1.guljatj(new Vector(9, 12), 100)\r\n    const dog2 = new Sobaka(offsetx, offsety, 1, 1, true)\r\n    dog2.guljatj(new Vector(10, 1), 100)\r\n    const dog3 = new Sobaka(offsetx, offsety, 10, 5, false)\r\n    dog3.guljatj(new Vector(12, 5), 200)\r\n    const dog4 = new Sobaka(offsetx, offsety, 10, 7, false)\r\n    dog4.guljatj(new Vector(12, 7), 300)\r\n    const dog5 = new Sobaka(offsetx, offsety, 10, 9, false)\r\n    dog5.guljatj(new Vector(12, 9), 400)\r\n\r\n    const objectsA = [deathNote, timer, ...mapATiles, ...buttonsAVertical, ...buttonsAHorizontal, ...flatten(doorsBHorizontal), ...flatten(doorsBVertical), dog1, dog2, finish]\r\n    const objectsB = [deathNote, timer, ...mapBTiles, ...buttonsBHorizontal, ...buttonsBVertical, ...flatten(doorsAVertical), ...flatten(doorsAHorizontal), dog3, dog4, dog5, finish]\r\n\r\n    super(playerA, playerB, objectsA, objectsB, engine)\r\n\r\n    this.add(background)\r\n\r\n    this.dog1 = dog1\r\n    this.dog2 = dog2\r\n    this.dog3 = dog3\r\n    this.dog4 = dog4\r\n    this.dog5 = dog5\r\n\r\n    // this.suchka = suchka\r\n    //this.setPlayers(offsetx, 1, 1, 4, 4)\r\n  }\r\n}\r\n","import * as ex from 'excalibur';\r\nimport { Player } from '../actors/player/player';\r\nimport { Level } from './level';\r\nimport { createWall, createBorders, createWalls } from '../actors/wall/wall';\r\nimport { Resources } from '../resources';\r\nimport { MagentaResources } from '../magentaResources';\r\nimport { CyanResources } from '../cyanResources';\r\nimport { Button } from \"../actors/button/button\"\r\nimport { Door } from \"../actors/door/door\"\r\nimport { Finish } from '../actors/finish/finish';\r\nimport { createButtonDoors, coords } from \"../createButtonDoors\"\r\nimport { flatten } from \"lodash\"\r\nimport { background } from \"../particles\"\r\nimport { Sobaka } from '../actors/sobaka/sobaka';\r\nimport { Vector } from 'excalibur';\r\nimport { ScoreTime } from '../actors/timer';\r\nimport { Game } from '..';\r\n\r\nconst {\r\n  leftTop: mlt,\r\n  leftBottom: mlb,\r\n  rightTop: mrt,\r\n  rightBottom: mrb,\r\n\r\n  endLeft: mel,\r\n  endDown: med,\r\n  endRight: mer,\r\n  endTop: met,\r\n\r\n  leftRight: mlr,\r\n  topDown: mtb,\r\n\r\n  cross: mcc,\r\n  tTop: mtt,\r\n  tDown: mtd,\r\n  tRight: mtr,\r\n  tLeft: mtl\r\n} = MagentaResources\r\n\r\nconst {\r\n  leftTop: clt,\r\n  leftBottom: clb,\r\n  rightTop: crt,\r\n  rightBottom: crb,\r\n\r\n  endLeft: cel,\r\n  endDown: ced,\r\n  endRight: cer,\r\n  endTop: cet,\r\n\r\n  leftRight: clr,\r\n  topDown: ctb,\r\n\r\n  cross: ccc,\r\n  tTop: ctt,\r\n  tDown: ctd,\r\n  tRight: ctr,\r\n  tLeft: ctl\r\n} = CyanResources\r\n\r\nconst mapA = [\r\n  [mlt, mlr, mlr, mlr, mlr, mlr, mlr, mlr, mlr, mlr, mtd, mrt],\r\n  [mtb, mlt, mlr, mlr, mlr, mlr, mlr, mlr, mlr, mlr, mrb, mtb],\r\n  [mtb, mtb, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', mtb],\r\n  [mtb, mtr, ' ', mlr, mlr, mlr, mlr, mtd, mlr, mer, ' ', mtb],\r\n  [mtb, mtb, ' ', ' ', ' ', ' ', ' ', mtb, ' ', ' ', ' ', mtb],\r\n  [mtb, mlb, mtd, mlr, mtd, mlr, mlr, mtl, ' ', mel, mlr, mtl],\r\n  [mtr, mlr, mcc, mlr, mtl, ' ', ' ', mtb, ' ', ' ', ' ', mtb],\r\n  [mtb, ' ', mtb, ' ', mtr, mer, ' ', mlb, mlr, mer, ' ', mtb],\r\n  [mtb, ' ', mtb, ' ', mtb, ' ', ' ', ' ', ' ', ' ', ' ', mtb],\r\n  [mtb, ' ', med, ' ', med, ' ', mel, mlr, mlr, mlr, mlr, mtl],\r\n  [mtb, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', mtb],\r\n  [mlb, mlr, mlr, mlr, mlr, mlr, mlr, mlr, mlr, mlr, mlr, mrb],\r\n]\r\n\r\nconst mapB = [\r\n  [clt, clr, clr, clr, clr, clr, clr, clr, clr, clr, clr, crt],\r\n  [ctb, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ctb],\r\n  [ctr, clr, clr, clr, crt, ' ', clt, clr, clr, clr, clr, ctl],\r\n  [ctb, ' ', ' ', ' ', ctb, ' ', ctb, ' ', ' ', ' ', ' ', ctb],\r\n  [ctb, ' ', cet, ' ', ctb, ' ', ced, ' ', clt, cer, ' ', ctb],\r\n  [ctb, ' ', ctb, ' ', ctb, ' ', ' ', ' ', ctb, ' ', ' ', ctb],\r\n  [ctr, ' ', ctl, ' ', ctr, clr, clr, clr, ctt, cer, ' ', ctb],\r\n  [ctb, ' ', ctb, ' ', ctb, ' ', ' ', ' ', ' ', ' ', ' ', ctb],\r\n  [ctr, clr, crb, ' ', ctr, cer, ' ', cel, clr, cer, ' ', ctb],\r\n  [ctb, ' ', ' ', ' ', ced, ' ', ' ', ' ', ' ', ' ', ' ', ctb],\r\n  [ctb, ' ', cet, ' ', ' ', ' ', cet, ' ', cet, ' ', clt, ctl],\r\n  [clb, clr, ctt, clr, clr, clr, ctt, clr, ctt, clr, ctt, crb],\r\n]\r\n\r\nexport class LevelTwo extends Level {\r\n  zhuchka: Sobaka\r\n  suchka: Sobaka\r\n  public onInitialize(engine: ex.Engine) { }\r\n  public onActivate() {\r\n    const offsetx = Math.round(this.engine.getWorldBounds().right / 2 + 24 - mapA[0].length / 2 * 48)\r\n    const offsety = Math.round(this.engine.getWorldBounds().bottom / 2 + 24 - mapA.length / 2 * 48)\r\n    this.setPlayers(offsetx, offsety, 6, 4, 1, 5)\r\n    this.game.controlsActive = true\r\n    this.showLevelNumber(2);\r\n    //this.zhuchka.setPos(offsetx, 5, 1, new Vector(10, 2))\r\n    //this.suchka.setPos(offsetx, 1, 5, new Vector(1, 10))\r\n  }\r\n  public onDeactivate() { this.game.controlsActive = false }\r\n\r\n  constructor(playerA: Player, playerB: Player, engine: Game, timer: ex.Label, deathNote: ex.Label) {\r\n    const offsetx = Math.round(engine.getWorldBounds().right / 2 + 24 - mapA[0].length / 2 * 48)\r\n    const offsety = Math.round(engine.getWorldBounds().bottom / 2 + 24 - mapA.length / 2 * 48)\r\n    const mapATiles = createWalls(offsetx, offsety, mapA, true)\r\n    const mapBTiles = createWalls(offsetx, offsety, mapB, false)\r\n    const buttonsDoorsCoordsA = [\r\n      {\r\n        button: { x: 3, y: 7 },\r\n        doors: [{ x: 1, y: 6 }]\r\n      }\r\n    ]\r\n\r\n    const buttonsDoorsCoordsB = [\r\n      {\r\n        button: { x: 9, y: 1 },\r\n        doors: [{ x: 2, y: 3 }]\r\n      }\r\n    ]\r\n\r\n    const buttonsDoorsA = buttonsDoorsCoordsA.map(buttonsDoorsCoord => createButtonDoors(\r\n      offsetx,\r\n      offsety,\r\n      buttonsDoorsCoord.button,\r\n      buttonsDoorsCoord.doors[0],\r\n      true, true))\r\n    const buttonsA = buttonsDoorsA.map(item => item.button)\r\n    const doorsA = buttonsDoorsA.map(item => item.doors)\r\n\r\n    const buttonsDoorsB = buttonsDoorsCoordsB.map(buttonsDoorsCoord => createButtonDoors(\r\n      offsetx,\r\n      offsety,\r\n      buttonsDoorsCoord.button,\r\n      buttonsDoorsCoord.doors[0],\r\n      true, false))\r\n    const buttonsB = buttonsDoorsB.map(item => item.button)\r\n    const doorsB = buttonsDoorsB.map(item => item.doors)\r\n\r\n\r\n    const finish = new Finish(offsetx, offsety, 1, 7, playerA, playerB)\r\n\r\n    // const zhuchka = new Sobaka(5, 1, true)\r\n    // const suchka = new Sobaka(1, 5, false)\r\n\r\n    // zhuchka.guljatj(new Vector(10, 2), 100)\r\n    // suchka.guljatj(new Vector(2, 10), 100)\r\n\r\n    const objectsA = [deathNote, timer, ...mapATiles, ...buttonsA, ...flatten(doorsB), /*zhuchka*/, finish]\r\n    const objectsB = [deathNote, timer, ...mapBTiles, ...buttonsB, ...flatten(doorsA), /*suchka*/, finish]\r\n\r\n    super(playerA, playerB, objectsA, objectsB, engine)\r\n\r\n    this.add(background)\r\n\r\n    // this.zhuchka = zhuchka\r\n    // this.suchka = suchka\r\n    //this.setPlayers(offsetx, 1, 1, 4, 4)\r\n  }\r\n}\r\n","import * as ex from \"excalibur\"\r\n\r\nconst emitter = new ex.ParticleEmitter(0, 0, 2, 2);\r\nemitter.emitterType = ex.EmitterType.Circle;\r\nemitter.radius = 5;\r\nemitter.minVel = 600;\r\nemitter.maxVel = 800;\r\nemitter.minAngle = 0;\r\nemitter.maxAngle = 6.2;\r\nemitter.isEmitting = false;\r\nemitter.emitRate = 463;\r\nemitter.opacity = 0.95;\r\nemitter.fadeFlag = false;\r\nemitter.particleLife = 556;\r\nemitter.maxSize = 10;\r\nemitter.minSize = 1;\r\nemitter.startSize = 18;\r\nemitter.endSize = 2;\r\nemitter.acceleration = new ex.Vector(0, -33);\r\nemitter.beginColor = ex.Color.Cyan;\r\nemitter.endColor = ex.Color.Magenta;\r\n\r\nexport default emitter\r\n","import * as ex from \"excalibur\"\r\n\r\nconst emitter = new ex.ParticleEmitter(0, -24, 0, 0);\r\nemitter.emitterType = ex.EmitterType.Circle;\r\nemitter.radius = 0;\r\nemitter.minVel = 0;\r\nemitter.maxVel = 80;\r\nemitter.minAngle = 0;\r\nemitter.maxAngle = 6.2;\r\nemitter.emitRate = 15;\r\nemitter.opacity = 0.83;\r\nemitter.fadeFlag = true;\r\nemitter.particleLife = 100;\r\nemitter.maxSize = 5;\r\nemitter.minSize = 5;\r\nemitter.startSize = 5;\r\nemitter.endSize = 0;\r\nemitter.acceleration = new ex.Vector(0, 0);\r\nemitter.beginColor = ex.Color.fromHex(\"ED1B7B\");\r\nemitter.endColor = ex.Color.fromHex(\"ED1B7B\");\r\nemitter.isEmitting = true\r\n\r\nexport default emitter","import * as ex from \"excalibur\"\r\n\r\nconst emitter = new ex.ParticleEmitter(0, -24, 0, 0);\r\nemitter.emitterType = ex.EmitterType.Circle;\r\nemitter.radius = 0;\r\nemitter.minVel = 0;\r\nemitter.maxVel = 80;\r\nemitter.minAngle = 0;\r\nemitter.maxAngle = 6.2;\r\nemitter.emitRate = 15;\r\nemitter.opacity = 0.83;\r\nemitter.fadeFlag = true;\r\nemitter.particleLife = 100;\r\nemitter.maxSize = 5;\r\nemitter.minSize = 5;\r\nemitter.startSize = 5;\r\nemitter.endSize = 0;\r\nemitter.acceleration = new ex.Vector(0, 0);\r\nemitter.beginColor = ex.Color.fromHex(\"00EAFF\");\r\nemitter.endColor = ex.Color.fromHex(\"00EAFF\");\r\nemitter.isEmitting = true\r\n\r\nexport default emitter","import * as ex from \"excalibur\"\r\n\r\nconst emitter = new ex.ParticleEmitter(0, 0, 1544, 1553);\r\nemitter.emitterType = ex.EmitterType.Rectangle;\r\nemitter.radius = 1000;\r\nemitter.minVel = 20;\r\nemitter.maxVel = 0;\r\nemitter.minAngle = 0;\r\nemitter.maxAngle = 6.2;\r\nemitter.emitRate = 5;\r\nemitter.opacity = 0.5;\r\nemitter.fadeFlag = true;\r\nemitter.particleLife = 3000;\r\nemitter.maxSize = 3;\r\nemitter.minSize = 1;\r\nemitter.startSize = 0;\r\nemitter.endSize = 0;\r\nemitter.acceleration = new ex.Vector(7, -215);\r\nemitter.beginColor = ex.Color.White;\r\nemitter.endColor = ex.Color.White;\r\nemitter.isEmitting = true;\r\n\r\nexport default emitter\r\n","import * as ex from 'excalibur';\r\n\r\nconst emitter = new ex.ParticleEmitter(0, 0, 2, 2);\r\nemitter.emitterType = ex.EmitterType.Rectangle;\r\nemitter.radius = 5;\r\nemitter.minVel = 20;\r\nemitter.maxVel = 20;\r\nemitter.minAngle = 0;\r\nemitter.maxAngle = 6.2;\r\nemitter.emitRate = 15;\r\nemitter.opacity = 0.5;\r\nemitter.fadeFlag = true;\r\nemitter.particleLife = 1500;\r\nemitter.maxSize = 25;\r\nemitter.minSize = 1;\r\nemitter.startSize = 0;\r\nemitter.endSize = 0;\r\nemitter.acceleration = new ex.Vector(0, 0);\r\nemitter.beginColor = ex.Color.Cyan;\r\nemitter.endColor = ex.Color.Magenta;\r\nemitter.isEmitting = true\r\n\r\nexport default emitter\r\n","module.exports = __webpack_public_path__ + \"99a3b7084e69153eeb0c6b52802d79a2.png\";","module.exports = __webpack_public_path__ + \"ca88da23912383e7fdb8c11e51fcc569.png\";","module.exports = __webpack_public_path__ + \"14ff06b5bd2d5747d1cfee62b361442a.png\";","module.exports = __webpack_public_path__ + \"0c97092e98d2a2b0b754c70716c948b4.png\";","module.exports = __webpack_public_path__ + \"89793fd1372e57afb8659081b85cb37a.png\";","module.exports = __webpack_public_path__ + \"4b8e7851f72f3b25db6cd3a9245f5503.png\";","module.exports = __webpack_public_path__ + \"2502fa9cdaa8b9194507c6a92d079dee.png\";","module.exports = __webpack_public_path__ + \"fc01e2c2c4853a39004cfe8f68222bdb.png\";","module.exports = __webpack_public_path__ + \"82846f7f0eb0515a87acddc2bba46da1.png\";","module.exports = __webpack_public_path__ + \"8a9ce674a407f741baea86f3d971efd8.png\";","module.exports = __webpack_public_path__ + \"b52dcc5a71e9ba76902fd537a282e039.png\";","module.exports = __webpack_public_path__ + \"bdea891a1a1eeb1bc9c9377880d90c4c.png\";","module.exports = __webpack_public_path__ + \"967d0b4cd25e47af5018b52c273ef55b.png\";","module.exports = __webpack_public_path__ + \"746bfa6d528093e2e67439556f97a877.png\";","module.exports = __webpack_public_path__ + \"9ec3498ab79af45ffc4f4b73fc9b5fa8.png\";","module.exports = __webpack_public_path__ + \"0fc22d0b97f94f10e5c600bb0a3930e8.png\";","module.exports = __webpack_public_path__ + \"095b4ba2dbe372ee5e5b12e5cc3cceaa.png\";","module.exports = __webpack_public_path__ + \"327dafb09ba69457a8deda25a52d6bca.png\";","module.exports = __webpack_public_path__ + \"26de36572f8ba9ab0fc8f60cfd3768f7.png\";","module.exports = __webpack_public_path__ + \"203470cac57ddd770a3041cb11a4a718.png\";","module.exports = __webpack_public_path__ + \"6c8a60a093ced23d183548e57e9a7cb3.png\";","module.exports = __webpack_public_path__ + \"685fe81e665e948564915a80f5d1b819.png\";","module.exports = __webpack_public_path__ + \"027479dbb593a1abb89161cb57cd7655.png\";","module.exports = __webpack_public_path__ + \"74993434990eb31337e1e285c20b2483.png\";","module.exports = __webpack_public_path__ + \"1c774a5bfe61277a7a2a0f0dc60773a2.png\";","module.exports = __webpack_public_path__ + \"45a3159564c9620c0036bc867a3ae294.png\";","module.exports = __webpack_public_path__ + \"b0ff42c7392596e5e3e64c5c86b156a2.png\";","module.exports = __webpack_public_path__ + \"3eab5b936ace06faa2edbd04d8fba11d.png\";","module.exports = __webpack_public_path__ + \"0c86f4533a9881865540e19757ad8aff.png\";","module.exports = __webpack_public_path__ + \"4760d340e077609658ed6025a8fffd62.png\";","module.exports = __webpack_public_path__ + \"f5e00e4e67cfee64a91d13245c937578.png\";","module.exports = __webpack_public_path__ + \"85faf9e1f1cff1f487f2a9a8ceb9ddb3.png\";","module.exports = __webpack_public_path__ + \"55724464a652d1fa6e3c7dfbd777ed06.png\";","module.exports = __webpack_public_path__ + \"961d4f68ddf70ee2efb53360776189a2.png\";","module.exports = __webpack_public_path__ + \"be6e9b5eeff4ae465d85c280950330d2.png\";","module.exports = __webpack_public_path__ + \"c2cb2811227e77f6331956e838bf7210.png\";","module.exports = __webpack_public_path__ + \"a37ab707f8bd8cd944c69249fb97db56.png\";","module.exports = __webpack_public_path__ + \"bf8d74da9c3d873ee77ab94fb23501e0.png\";","module.exports = __webpack_public_path__ + \"a83720970e2d8055552e4146d85e8137.png\";","module.exports = __webpack_public_path__ + \"395bdb2aa2ef6f3653e6139946a0e32f.png\";","module.exports = __webpack_public_path__ + \"78edfb5ea9c31366e1d349eb4907dbfd.png\";","module.exports = __webpack_public_path__ + \"4aab428dba6fc05b93d9e741d77cb350.png\";","module.exports = __webpack_public_path__ + \"0d55021738f0a07ea5f24d6fba1f2adc.png\";","module.exports = __webpack_public_path__ + \"a495d1519ad4b72ac0b5fe589d0106dc.png\";","module.exports = __webpack_public_path__ + \"ce231fbb107d5d698c97b7d3c2beacfe.png\";","module.exports = __webpack_public_path__ + \"20e8d332b82fef50fdcb5d3c3231a674.png\";","module.exports = __webpack_public_path__ + \"ffe2fb2e95b3a53089352449318955e3.png\";","module.exports = __webpack_public_path__ + \"1dba144cb412b7a983fd11a57f51443a.png\";","module.exports = __webpack_public_path__ + \"d3b0deccb565c5c16ae8da668a5f2c9a.png\";","module.exports = __webpack_public_path__ + \"ec0cab7c6037a8297f9b2c9755903643.png\";","module.exports = __webpack_public_path__ + \"df4fcdf0d8b98b5f2578100796b16df0.jpg\";","module.exports = __webpack_public_path__ + \"b8b90d8d291ba8ca0781d9040f99f043.png\";","module.exports = __webpack_public_path__ + \"9a0e12e0ead2125b3db703bd07d672af.png\";","module.exports = __webpack_public_path__ + \"4683f8c1a4b538e518c6818eb2211409.png\";","module.exports = __webpack_public_path__ + \"12e5bd59430f32af76134a66265e7e04.png\";","module.exports = __webpack_public_path__ + \"765c15f24a07eda65e98e1c43cbf6d75.png\";","module.exports = __webpack_public_path__ + \"f7b11e27c7f8d16cc03ed949b0c3a984.png\";","import * as ex from 'excalibur';\r\nimport { Player } from '../actors/player/player';\r\nimport { Level } from './level';\r\nimport { createWall, createBorders, createWalls } from '../actors/wall/wall';\r\nimport { Resources } from '../resources';\r\nimport { MagentaResources } from '../magentaResources';\r\nimport { CyanResources } from '../cyanResources';\r\nimport { Button } from \"../actors/button/button\"\r\nimport { Door } from \"../actors/door/door\"\r\nimport { Finish } from '../actors/finish/finish';\r\nimport { createButtonDoors, coords } from \"../createButtonDoors\"\r\nimport { flatten } from \"lodash\"\r\nimport { background } from \"../particles\"\r\nimport { Sobaka } from '../actors/sobaka/sobaka';\r\nimport { Vector } from 'excalibur';\r\nimport { ScoreTime } from '../actors/timer';\r\nimport { Game } from '..';\r\n\r\nconst {\r\n    leftTop: mlt,\r\n    leftBottom: mlb,\r\n    rightTop: mrt,\r\n    rightBottom: mrb,\r\n\r\n    endLeft: mel,\r\n    endDown: med,\r\n    endRight: mer,\r\n    endTop: met,\r\n\r\n    leftRight: mlr,\r\n    topDown: mtb,\r\n\r\n    cross: mcc,\r\n    tTop: mtt,\r\n    tDown: mtd,\r\n    tRight: mtr,\r\n    tLeft: mtl\r\n} = MagentaResources\r\n\r\nconst {\r\n    leftTop: clt,\r\n    leftBottom: clb,\r\n    rightTop: crt,\r\n    rightBottom: crb,\r\n\r\n    endLeft: cel,\r\n    endDown: ced,\r\n    endRight: cer,\r\n    endTop: cet,\r\n\r\n    leftRight: clr,\r\n    topDown: ctb,\r\n\r\n    cross: ccc,\r\n    tTop: ctt,\r\n    tDown: ctd,\r\n    tRight: ctr,\r\n    tLeft: ctl\r\n} = CyanResources\r\n\r\nconst mapA = [\r\n    [mlt, mtd, mlr, mlr, mtd, mlr, mlr, mlr, mtd, mrt],\r\n    [mtr, mrb, ' ', ' ', mtb, ' ', ' ', ' ', mtb, mtb],\r\n    [mtb, ' ', ' ', ' ', mtr, mlr, mrt, ' ', mlb, mtl],\r\n    [mtb, ' ', mel, mlr, mtt, mlr, mtl, ' ', ' ', mtb],\r\n    [mtb, ' ', ' ', ' ', ' ', ' ', mtb, ' ', ' ', mtb],\r\n    [mtb, ' ', met, ' ', met, ' ', mtr, mer, ' ', mtb],\r\n    [mtr, mlr, mrb, ' ', mtb, ' ', med, ' ', ' ', mtb],\r\n    [mtb, ' ', ' ', ' ', mtb, ' ', ' ', ' ', ' ', mtb],\r\n    [mlb, mlr, mlr, mlr, mtt, mlr, mlr, mlr, mlr, mrb],\r\n    []\r\n]\r\n\r\nconst mapB = [\r\n    [clt, ctd, clr, clr, clr, clr, ctd, clr, ctd, crt],\r\n    [ctb, ctb, ' ', ' ', ' ', ' ', ctb, ' ', clb, ctl],\r\n    [ctr, crb, ' ', cet, ' ', ' ', ctb, ' ', ' ', ctb],\r\n    [ctb, ' ', ' ', ctr, ctd, clr, ctt, cer, ' ', ctb],\r\n    [ctb, ' ', clt, ctt, crb, ' ', ' ', ' ', ' ', ctb],\r\n    [ctb, ' ', ctb, ' ', ' ', ' ', clt, clr, clr, ctl],\r\n    [ctb, ' ', ced, ' ', cet, ' ', ced, ' ', ' ', ctb],\r\n    [ctb, ' ', ' ', ' ', ctb, ' ', ' ', ' ', ' ', ctb],\r\n    [clb, clr, clr, clr, ctt, clr, clr, clr, clr, crb],\r\n    []\r\n]\r\n\r\nexport class LevelOne extends Level {\r\n    public onInitialize(engine: ex.Engine) { }\r\n    public onActivate() {\r\n        const offsetx = Math.round(this.engine.getWorldBounds().right / 2 + 24 - mapA[0].length / 2 * 48)\r\n        const offsety = Math.round(this.engine.getWorldBounds().bottom / 2 + 24 - mapA.length / 2 * 48)\r\n        this.setPlayers(offsetx, offsety, 1, 7, 8, 7)\r\n        this.game.controlsActive = true\r\n        this.showLevelNumber(1)\r\n    }\r\n    public onDeactivate() { }\r\n\r\n    constructor(playerA: Player, playerB: Player, engine: Game, timer: ex.Label, deathNote: ex.Label) {\r\n        const offsetx = Math.round(engine.getWorldBounds().right / 2 + 24 - mapA[0].length / 2 * 48)\r\n        const offsety = Math.round(engine.getWorldBounds().bottom / 2 + 24 - mapA.length / 2 * 48)\r\n        const mapATiles = createWalls(offsetx, offsety, mapA, true)\r\n        const mapBTiles = createWalls(offsetx, offsety, mapB, false)\r\n\r\n        const finish = new Finish(offsetx, offsety, 5, 1, playerA, playerB)\r\n\r\n        const objectsA = [deathNote, timer, ...mapATiles, finish]\r\n        const objectsB = [deathNote, timer, ...mapBTiles, finish]\r\n\r\n        super(playerA, playerB, objectsA, objectsB, engine)\r\n\r\n        this.add(background)\r\n    }\r\n}\r\n"],"sourceRoot":""}